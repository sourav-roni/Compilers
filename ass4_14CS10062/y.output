Terminals unused in grammar

   SINGLE_LINE_COMMENT
   MULTI_LINE_COMMENT
   STRUCT_KEYWORD
   TYPEDEF_KEYWORD
   UNION_KEYWORD
   HASH


State 325 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | constant
    3                   | STRING_LITERAL
    4                   | LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE

    5 constant: INTEGER_CONSTANT
    6         | FLOATING_CONSTANT
    7         | CHAR_CONSTANT
    8         | ENUMERATION_CONSTANT

    9 postfix_expression: primary_expression
   10                   | postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
   11                   | postfix_expression LEFT_ROUND_BRACE argument_expression_list_opt RIGHT_ROUND_BRACE
   12                   | postfix_expression PERIOD IDENTIFIER
   13                   | postfix_expression POINTS_TO IDENTIFIER
   14                   | postfix_expression PLUS_PLUS
   15                   | postfix_expression MINUS_MINUS
   16                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

   18 argument_expression_list_opt: argument_expression_list
   19                             | %empty

   20 argument_expression_list: assignment_expression
   21                         | argument_expression_list COMMA assignment_expression

   22 unary_expression: postfix_expression
   23                 | PLUS_PLUS unary_expression
   24                 | MINUS_MINUS unary_expression
   25                 | unary_operator cast_expression
   26                 | SIZEOF_KEYWORD unary_expression
   27                 | SIZEOF_KEYWORD LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE

   28 unary_operator: AMPERSAND
   29               | MULTIPLICATION
   30               | PLUS
   31               | MINUS
   32               | TILDE
   33               | EXCLIMATION

   34 cast_expression: unary_expression
   35                | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE cast_expression

   36 multiplicative_expression: cast_expression
   37                          | multiplicative_expression MULTIPLICATION cast_expression
   38                          | multiplicative_expression FORWARD_SLASH cast_expression
   39                          | multiplicative_expression PERCENTAGE cast_expression

   40 additive_expression: multiplicative_expression
   41                    | additive_expression PLUS multiplicative_expression
   42                    | additive_expression MINUS multiplicative_expression

   43 shift_expression: additive_expression
   44                 | shift_expression LEFT_SHIFT additive_expression
   45                 | shift_expression RIGHT_SHIFT additive_expression

   46 relational_expression: shift_expression
   47                      | relational_expression LESS_THAN shift_expression
   48                      | relational_expression GREATER_THAN shift_expression
   49                      | relational_expression LESS_THAN_EQUAL shift_expression
   50                      | relational_expression GREATER_THAN_EQUAL shift_expression

   51 equality_expression: relational_expression
   52                    | equality_expression EQUAL_EQUAL relational_expression
   53                    | equality_expression NOT_EQUAL relational_expression

   54 AND_expression: equality_expression
   55               | AND_expression AMPERSAND equality_expression

   56 exclusive_OR_expression: AND_expression
   57                        | exclusive_OR_expression CARET AND_expression

   58 inclusive_OR_expression: exclusive_OR_expression
   59                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   60 logical_AND_expression: inclusive_OR_expression
   61                       | logical_AND_expression LOGICAL_AND inclusive_OR_expression

   62 logical_OR_expression: logical_AND_expression
   63                      | logical_OR_expression LOGICAL_OR logical_AND_expression

   64 conditional_expression: logical_OR_expression
   65                       | logical_OR_expression QUESTION_MARK expression COLON conditional_expression

   66 assignment_expression: conditional_expression
   67                      | unary_expression assignment_operator assignment_expression

   68 assignment_operator: EQUAL
   69                    | MULTIPLICATION_EQUAL
   70                    | SLASH_EQUAL
   71                    | PERCENTAGE_EQUAL
   72                    | PLUS_EQUAL
   73                    | MINUS_EQUAL
   74                    | LEFT_SHIFT_EQUAL
   75                    | RIGHT_SHIFT_EQUAL
   76                    | BITWISE_AND_EQUAL
   77                    | BITWISE_NOT_EQUAL
   78                    | BITWISE_OR_EQUAL

   79 expression: assignment_expression
   80           | expression COMMA assignment_expression

   81 constant_expression: conditional_expression

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON_TERMINATOR

   83 init_declarator_list_opt: init_declarator_list
   84                         | %empty

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   86                       | type_specifier declaration_specifiers_opt
   87                       | type_qualifier declaration_specifiers_opt
   88                       | function_specifier declaration_specifiers_opt

   89 declaration_specifiers_opt: declaration_specifiers
   90                           | %empty

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list COMMA init_declarator

   93 init_declarator: declarator
   94                | declarator EQUAL initializer

   95 storage_class_specifier: EXTERN_KEYWORD
   96                        | STATIC_KEYWORD
   97                        | AUTO_KEYWORD
   98                        | REGISTER_KEYWORD

   99 type_specifier: VOID_KEYWORD
  100               | CHAR_KEYWORD
  101               | SHORT_KEYWORD
  102               | INT_KEYWORD
  103               | LONG_KEYWORD
  104               | FLOAT_KEYWORD
  105               | DOUBLE_KEYWORD
  106               | SIGNED_KEYWORD
  107               | UNSIGNED_KEYWORD
  108               | _BOOL_KEYWORD
  109               | _COMPLEX_KEYWORD
  110               | _IMAGINARY_KEYWORD
  111               | enum_specifier

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  113                         | type_qualifier specifier_qualifier_list_opt

  114 specifier_qualifier_list_opt: specifier_qualifier_list
  115                             | %empty

  116 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  117               | ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE
  118               | ENUM_KEYWORD IDENTIFIER

  119 identifier_opt: IDENTIFIER
  120               | %empty

  121 enumerator_list: enumerator
  122                | enumerator_list COMMA enumerator

  123 enumerator: ENUMERATION_CONSTANT
  124           | ENUMERATION_CONSTANT EQUAL constant_expression

  125 type_qualifier: CONST_KEYWORD
  126               | RESTRICT_KEYWORD
  127               | VOLATILE_KEYWORD

  128 function_specifier: INLINE_KEYWORD

  129 declarator: pointer_opt direct_declarator

  130 pointer_opt: pointer
  131            | %empty

  132 direct_declarator: IDENTIFIER
  133                  | LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE
  134                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACE
  135                  | direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACE
  136                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  137                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list_opt MULTIPLICATION RIGHT_SQUARE_BRACE
  138                  | direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  139                  | direct_declarator LEFT_ROUND_BRACE identifier_list_opt RIGHT_ROUND_BRACE

  140 type_qualifier_list_opt: type_qualifier_list
  141                        | %empty

  142 assignment_expression_opt: assignment_expression
  143                          | %empty

  144 identifier_list_opt: identifier_list
  145                    | %empty

  146 pointer: MULTIPLICATION type_qualifier_list_opt
  147        | MULTIPLICATION type_qualifier_list_opt pointer

  148 type_qualifier_list: type_qualifier
  149                    | type_qualifier_list type_qualifier

  150 parameter_type_list: parameter_list
  151                    | parameter_list COMMA ELIPSES

  152 parameter_list: parameter_declaration
  153               | parameter_list COMMA parameter_declaration

  154 parameter_declaration: declaration_specifiers declarator
  155                      | declaration_specifiers

  156 identifier_list: IDENTIFIER
  157                | identifier_list COMMA IDENTIFIER

  158 type_name: specifier_qualifier_list

  159 initializer: assignment_expression
  160            | LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  161            | LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

  162 initializer_list: designation_opt initializer
  163                 | initializer_list COMMA designation_opt initializer

  164 designation_opt: designation
  165                | %empty

  166 designation: designator_list EQUAL

  167 designator_list: designator
  168                | designator_list designator

  169 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE
  170           | PERIOD IDENTIFIER

  171 statement: labeled_statement
  172          | compound_statement
  173          | expression_statement
  174          | selection_statement
  175          | iteration_statement
  176          | jump_statement

  177 labeled_statement: IDENTIFIER COLON statement
  178                  | CASE_KEYWORD constant_expression COLON statement
  179                  | DEFAULT_KEYWORD COLON statement

  180 compound_statement: LEFT_CURLY_BRACE block_item_list_opt RIGHT_CURLY_BRACE

  181 block_item_list_opt: block_item_list
  182                    | %empty

  183 block_item_list: block_item
  184                | block_item_list block_item

  185 block_item: declaration
  186           | statement

  187 expression_statement: expression_opt SEMICOLON_TERMINATOR

  188 expression_opt: expression
  189               | %empty

  190 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE_KEYWORD statement
  191                    | IF_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement
  192                    | SWITCH_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

  193 iteration_statement: WHILE_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement
  194                    | DO_KEYWORD statement WHILE_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR
  195                    | FOR_KEYWORD LEFT_ROUND_BRACE expression_opt SEMICOLON_TERMINATOR expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement
  196                    | FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement

  197 jump_statement: GOTO_KEYWORD IDENTIFIER SEMICOLON_TERMINATOR
  198               | CONTINUE_KEYWORD SEMICOLON_TERMINATOR
  199               | BREAK_KEYWORD SEMICOLON_TERMINATOR
  200               | RETURN_KEYWORD expression_opt SEMICOLON_TERMINATOR

  201 translation_unit: external_declaration
  202                 | translation_unit external_declaration

  203 external_declaration: function_definition
  204                     | declaration

  205 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  206 declaration_list_opt: declaration_list
  207                     | %empty

  208 declaration_list: declaration
  209                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
error (256)
SINGLE_LINE_COMMENT (258)
MULTI_LINE_COMMENT (259)
AUTO_KEYWORD (260) 97
BREAK_KEYWORD (261) 199
CASE_KEYWORD (262) 178
CHAR_KEYWORD (263) 100
CONST_KEYWORD (264) 125
CONTINUE_KEYWORD (265) 198
DEFAULT_KEYWORD (266) 179
DO_KEYWORD (267) 194
DOUBLE_KEYWORD (268) 105
ELSE_KEYWORD (269) 190
ENUM_KEYWORD (270) 116 117 118
EXTERN_KEYWORD (271) 95
FLOAT_KEYWORD (272) 104
FOR_KEYWORD (273) 195 196
GOTO_KEYWORD (274) 197
IF_KEYWORD (275) 190 191
INLINE_KEYWORD (276) 128
INT_KEYWORD (277) 102
LONG_KEYWORD (278) 103
REGISTER_KEYWORD (279) 98
RESTRICT_KEYWORD (280) 126
RETURN_KEYWORD (281) 200
SHORT_KEYWORD (282) 101
SIGNED_KEYWORD (283) 106
SIZEOF_KEYWORD (284) 26 27
STATIC_KEYWORD (285) 96 135 136
STRUCT_KEYWORD (286)
SWITCH_KEYWORD (287) 192
TYPEDEF_KEYWORD (288)
UNION_KEYWORD (289)
UNSIGNED_KEYWORD (290) 107
VOID_KEYWORD (291) 99
VOLATILE_KEYWORD (292) 127
WHILE_KEYWORD (293) 193 194
_BOOL_KEYWORD (294) 108
_COMPLEX_KEYWORD (295) 109
_IMAGINARY_KEYWORD (296) 110
IDENTIFIER (297) 1 12 13 118 119 132 156 157 170 177 197
INTEGER_CONSTANT (298) 5
FLOATING_CONSTANT (299) 6
ENUMERATION_CONSTANT (300) 8 123 124
CHAR_CONSTANT (301) 7
STRING_LITERAL (302) 3
LEFT_SQUARE_BRACE (303) 10 134 135 136 137 169
RIGHT_SQUARE_BRACE (304) 10 134 135 136 137 169
LEFT_ROUND_BRACE (305) 4 11 16 17 27 35 133 138 139 190 191 192 193
    194 195 196
RIGHT_ROUND_BRACE (306) 4 11 16 17 27 35 133 138 139 190 191 192 193
    194 195 196
LEFT_CURLY_BRACE (307) 16 17 116 117 160 161 180
RIGHT_CURLY_BRACE (308) 16 17 116 117 160 161 180
PERIOD (309) 12 170
POINTS_TO (310) 13
PLUS_PLUS (311) 14 23
MINUS_MINUS (312) 15 24
AMPERSAND (313) 28 55
MULTIPLICATION (314) 29 37 137 146 147
PLUS (315) 30 41
MINUS (316) 31 42
TILDE (317) 32
EXCLIMATION (318) 33
FORWARD_SLASH (319) 38
PERCENTAGE (320) 39
LEFT_SHIFT (321) 44
RIGHT_SHIFT (322) 45
LESS_THAN (323) 47
GREATER_THAN (324) 48
LESS_THAN_EQUAL (325) 49
GREATER_THAN_EQUAL (326) 50
EQUAL_EQUAL (327) 52
NOT_EQUAL (328) 53
CARET (329) 57
BITWISE_OR (330) 59
LOGICAL_AND (331) 61
LOGICAL_OR (332) 63
QUESTION_MARK (333) 65
COLON (334) 65 177 178 179
SEMICOLON_TERMINATOR (335) 82 187 194 195 196 197 198 199 200
ELIPSES (336) 151
EQUAL (337) 68 94 124 166
MULTIPLICATION_EQUAL (338) 69
SLASH_EQUAL (339) 70
PERCENTAGE_EQUAL (340) 71
PLUS_EQUAL (341) 72
MINUS_EQUAL (342) 73
LEFT_SHIFT_EQUAL (343) 74
RIGHT_SHIFT_EQUAL (344) 75
BITWISE_AND_EQUAL (345) 76
BITWISE_NOT_EQUAL (346) 77
BITWISE_OR_EQUAL (347) 78
COMMA (348) 17 21 80 92 117 122 151 153 157 161 163
HASH (349)


Nonterminals, with rules where they appear

$accept (95)
    on left: 0
primary_expression (96)
    on left: 1 2 3 4, on right: 9
constant (97)
    on left: 5 6 7 8, on right: 2
postfix_expression (98)
    on left: 9 10 11 12 13 14 15 16 17, on right: 10 11 12 13 14 15
    22
argument_expression_list_opt (99)
    on left: 18 19, on right: 11
argument_expression_list (100)
    on left: 20 21, on right: 18 21
unary_expression (101)
    on left: 22 23 24 25 26 27, on right: 23 24 26 34 67
unary_operator (102)
    on left: 28 29 30 31 32 33, on right: 25
cast_expression (103)
    on left: 34 35, on right: 25 35 36 37 38 39
multiplicative_expression (104)
    on left: 36 37 38 39, on right: 37 38 39 40 41 42
additive_expression (105)
    on left: 40 41 42, on right: 41 42 43 44 45
shift_expression (106)
    on left: 43 44 45, on right: 44 45 46 47 48 49 50
relational_expression (107)
    on left: 46 47 48 49 50, on right: 47 48 49 50 51 52 53
equality_expression (108)
    on left: 51 52 53, on right: 52 53 54 55
AND_expression (109)
    on left: 54 55, on right: 55 56 57
exclusive_OR_expression (110)
    on left: 56 57, on right: 57 58 59
inclusive_OR_expression (111)
    on left: 58 59, on right: 59 60 61
logical_AND_expression (112)
    on left: 60 61, on right: 61 62 63
logical_OR_expression (113)
    on left: 62 63, on right: 63 64 65
conditional_expression (114)
    on left: 64 65, on right: 65 66 81
assignment_expression (115)
    on left: 66 67, on right: 20 21 67 79 80 135 136 142 159
assignment_operator (116)
    on left: 68 69 70 71 72 73 74 75 76 77 78, on right: 67
expression (117)
    on left: 79 80, on right: 4 10 65 80 188 190 191 192 193 194
constant_expression (118)
    on left: 81, on right: 124 169 178
declaration (119)
    on left: 82, on right: 185 196 204 208 209
init_declarator_list_opt (120)
    on left: 83 84, on right: 82
declaration_specifiers (121)
    on left: 85 86 87 88, on right: 82 89 154 155 205
declaration_specifiers_opt (122)
    on left: 89 90, on right: 85 86 87 88
init_declarator_list (123)
    on left: 91 92, on right: 83 92
init_declarator (124)
    on left: 93 94, on right: 91 92
storage_class_specifier (125)
    on left: 95 96 97 98, on right: 85
type_specifier (126)
    on left: 99 100 101 102 103 104 105 106 107 108 109 110 111, on right:
    86 112
specifier_qualifier_list (127)
    on left: 112 113, on right: 114 158
specifier_qualifier_list_opt (128)
    on left: 114 115, on right: 112 113
enum_specifier (129)
    on left: 116 117 118, on right: 111
identifier_opt (130)
    on left: 119 120, on right: 116 117
enumerator_list (131)
    on left: 121 122, on right: 116 117 122
enumerator (132)
    on left: 123 124, on right: 121 122
type_qualifier (133)
    on left: 125 126 127, on right: 87 113 148 149
function_specifier (134)
    on left: 128, on right: 88
declarator (135)
    on left: 129, on right: 93 94 133 154 205
pointer_opt (136)
    on left: 130 131, on right: 129
direct_declarator (137)
    on left: 132 133 134 135 136 137 138 139, on right: 129 134 135
    136 137 138 139
type_qualifier_list_opt (138)
    on left: 140 141, on right: 134 135 137 146 147
assignment_expression_opt (139)
    on left: 142 143, on right: 134
identifier_list_opt (140)
    on left: 144 145, on right: 139
pointer (141)
    on left: 146 147, on right: 130 147
type_qualifier_list (142)
    on left: 148 149, on right: 136 140 149
parameter_type_list (143)
    on left: 150 151, on right: 138
parameter_list (144)
    on left: 152 153, on right: 150 151 153
parameter_declaration (145)
    on left: 154 155, on right: 152 153
identifier_list (146)
    on left: 156 157, on right: 144 157
type_name (147)
    on left: 158, on right: 16 17 27 35
initializer (148)
    on left: 159 160 161, on right: 94 162 163
initializer_list (149)
    on left: 162 163, on right: 16 17 160 161 163
designation_opt (150)
    on left: 164 165, on right: 162 163
designation (151)
    on left: 166, on right: 164
designator_list (152)
    on left: 167 168, on right: 166 168
designator (153)
    on left: 169 170, on right: 167 168
statement (154)
    on left: 171 172 173 174 175 176, on right: 177 178 179 186 190
    191 192 193 194 195 196
labeled_statement (155)
    on left: 177 178 179, on right: 171
compound_statement (156)
    on left: 180, on right: 172 205
block_item_list_opt (157)
    on left: 181 182, on right: 180
block_item_list (158)
    on left: 183 184, on right: 181 184
block_item (159)
    on left: 185 186, on right: 183 184
expression_statement (160)
    on left: 187, on right: 173
expression_opt (161)
    on left: 188 189, on right: 187 195 196 200
selection_statement (162)
    on left: 190 191 192, on right: 174
iteration_statement (163)
    on left: 193 194 195 196, on right: 175
jump_statement (164)
    on left: 197 198 199 200, on right: 176
translation_unit (165)
    on left: 201 202, on right: 0 202
external_declaration (166)
    on left: 203 204, on right: 201 202
function_definition (167)
    on left: 205, on right: 203
declaration_list_opt (168)
    on left: 206 207, on right: 205
declaration_list (169)
    on left: 208 209, on right: 206 209


State 0

    0 $accept: . translation_unit $end

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   97 storage_class_specifier: AUTO_KEYWORD .

    $default  reduce using rule 97 (storage_class_specifier)


State 2

  100 type_specifier: CHAR_KEYWORD .

    $default  reduce using rule 100 (type_specifier)


State 3

  125 type_qualifier: CONST_KEYWORD .

    $default  reduce using rule 125 (type_qualifier)


State 4

  105 type_specifier: DOUBLE_KEYWORD .

    $default  reduce using rule 105 (type_specifier)


State 5

  116 enum_specifier: ENUM_KEYWORD . identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  117               | ENUM_KEYWORD . identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE
  118               | ENUM_KEYWORD . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 120 (identifier_opt)

    identifier_opt  go to state 33


State 6

   95 storage_class_specifier: EXTERN_KEYWORD .

    $default  reduce using rule 95 (storage_class_specifier)


State 7

  104 type_specifier: FLOAT_KEYWORD .

    $default  reduce using rule 104 (type_specifier)


State 8

  128 function_specifier: INLINE_KEYWORD .

    $default  reduce using rule 128 (function_specifier)


State 9

  102 type_specifier: INT_KEYWORD .

    $default  reduce using rule 102 (type_specifier)


State 10

  103 type_specifier: LONG_KEYWORD .

    $default  reduce using rule 103 (type_specifier)


State 11

   98 storage_class_specifier: REGISTER_KEYWORD .

    $default  reduce using rule 98 (storage_class_specifier)


State 12

  126 type_qualifier: RESTRICT_KEYWORD .

    $default  reduce using rule 126 (type_qualifier)


State 13

  101 type_specifier: SHORT_KEYWORD .

    $default  reduce using rule 101 (type_specifier)


State 14

  106 type_specifier: SIGNED_KEYWORD .

    $default  reduce using rule 106 (type_specifier)


State 15

   96 storage_class_specifier: STATIC_KEYWORD .

    $default  reduce using rule 96 (storage_class_specifier)


State 16

  107 type_specifier: UNSIGNED_KEYWORD .

    $default  reduce using rule 107 (type_specifier)


State 17

   99 type_specifier: VOID_KEYWORD .

    $default  reduce using rule 99 (type_specifier)


State 18

  127 type_qualifier: VOLATILE_KEYWORD .

    $default  reduce using rule 127 (type_qualifier)


State 19

  108 type_specifier: _BOOL_KEYWORD .

    $default  reduce using rule 108 (type_specifier)


State 20

  109 type_specifier: _COMPLEX_KEYWORD .

    $default  reduce using rule 109 (type_specifier)


State 21

  110 type_specifier: _IMAGINARY_KEYWORD .

    $default  reduce using rule 110 (type_specifier)


State 22

  204 external_declaration: declaration .

    $default  reduce using rule 204 (external_declaration)


State 23

   82 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON_TERMINATOR
  205 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    MULTIPLICATION  shift, and go to state 34

    SEMICOLON_TERMINATOR  reduce using rule 84 (init_declarator_list_opt)
    $default              reduce using rule 131 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 38
    pointer_opt               go to state 39
    pointer                   go to state 40


State 24

   85 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   86 declaration_specifiers: type_specifier . declaration_specifiers_opt

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  111 type_specifier: enum_specifier .

    $default  reduce using rule 111 (type_specifier)


State 27

   87 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   88 declaration_specifiers: function_specifier . declaration_specifiers_opt

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . $end
  202 translation_unit: translation_unit . external_declaration

    $end                shift, and go to state 46
    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  201 translation_unit: external_declaration .

    $default  reduce using rule 201 (translation_unit)


State 31

  203 external_declaration: function_definition .

    $default  reduce using rule 203 (external_declaration)


State 32

  118 enum_specifier: ENUM_KEYWORD IDENTIFIER .
  119 identifier_opt: IDENTIFIER .

    LEFT_CURLY_BRACE  reduce using rule 119 (identifier_opt)
    $default          reduce using rule 118 (enum_specifier)


State 33

  116 enum_specifier: ENUM_KEYWORD identifier_opt . LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  117               | ENUM_KEYWORD identifier_opt . LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 48


State 34

  146 pointer: MULTIPLICATION . type_qualifier_list_opt
  147        | MULTIPLICATION . type_qualifier_list_opt pointer

    CONST_KEYWORD     shift, and go to state 3
    RESTRICT_KEYWORD  shift, and go to state 12
    VOLATILE_KEYWORD  shift, and go to state 18

    $default  reduce using rule 141 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   82 declaration: declaration_specifiers init_declarator_list_opt . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 52


State 36

   83 init_declarator_list_opt: init_declarator_list .
   92 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 53

    $default  reduce using rule 83 (init_declarator_list_opt)


State 37

   91 init_declarator_list: init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 38

   93 init_declarator: declarator .
   94                | declarator . EQUAL initializer
  205 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    EQUAL               shift, and go to state 54

    LEFT_CURLY_BRACE  reduce using rule 207 (declaration_list_opt)
    $default          reduce using rule 93 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 57
    declaration_list         go to state 58


State 39

  129 declarator: pointer_opt . direct_declarator

    IDENTIFIER        shift, and go to state 59
    LEFT_ROUND_BRACE  shift, and go to state 60

    direct_declarator  go to state 61


State 40

  130 pointer_opt: pointer .

    $default  reduce using rule 130 (pointer_opt)


State 41

   89 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers_opt)


State 42

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 85 (declaration_specifiers)


State 43

   86 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 44

   87 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 87 (declaration_specifiers)


State 45

   88 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 88 (declaration_specifiers)


State 46

    0 $accept: translation_unit $end .

    $default  accept


State 47

  202 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 202 (translation_unit)


State 48

  116 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE . enumerator_list RIGHT_CURLY_BRACE
  117               | ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE . enumerator_list COMMA RIGHT_CURLY_BRACE

    ENUMERATION_CONSTANT  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 49

  148 type_qualifier_list: type_qualifier .

    $default  reduce using rule 148 (type_qualifier_list)


State 50

  146 pointer: MULTIPLICATION type_qualifier_list_opt .
  147        | MULTIPLICATION type_qualifier_list_opt . pointer

    MULTIPLICATION  shift, and go to state 34

    $default  reduce using rule 146 (pointer)

    pointer  go to state 65


State 51

  140 type_qualifier_list_opt: type_qualifier_list .
  149 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_KEYWORD     shift, and go to state 3
    RESTRICT_KEYWORD  shift, and go to state 12
    VOLATILE_KEYWORD  shift, and go to state 18

    $default  reduce using rule 140 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 52

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON_TERMINATOR .

    $default  reduce using rule 82 (declaration)


State 53

   92 init_declarator_list: init_declarator_list COMMA . init_declarator

    MULTIPLICATION  shift, and go to state 34

    $default  reduce using rule 131 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer_opt      go to state 39
    pointer          go to state 40


State 54

   94 init_declarator: declarator EQUAL . initializer

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 77
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 103
    initializer                go to state 104


State 55

  208 declaration_list: declaration .

    $default  reduce using rule 208 (declaration_list)


State 56

   82 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON_TERMINATOR

    MULTIPLICATION  shift, and go to state 34

    SEMICOLON_TERMINATOR  reduce using rule 84 (init_declarator_list_opt)
    $default              reduce using rule 131 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 68
    pointer_opt               go to state 39
    pointer                   go to state 40


State 57

  205 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    LEFT_CURLY_BRACE  shift, and go to state 105

    compound_statement  go to state 106


State 58

  206 declaration_list_opt: declaration_list .
  209 declaration_list: declaration_list . declaration

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 206 (declaration_list_opt)

    declaration              go to state 107
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 59

  132 direct_declarator: IDENTIFIER .

    $default  reduce using rule 132 (direct_declarator)


State 60

  133 direct_declarator: LEFT_ROUND_BRACE . declarator RIGHT_ROUND_BRACE

    MULTIPLICATION  shift, and go to state 34

    $default  reduce using rule 131 (pointer_opt)

    declarator   go to state 108
    pointer_opt  go to state 39
    pointer      go to state 40


State 61

  129 declarator: pointer_opt direct_declarator .
  134 direct_declarator: direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACE
  135                  | direct_declarator . LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACE
  136                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  137                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list_opt MULTIPLICATION RIGHT_SQUARE_BRACE
  138                  | direct_declarator . LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  139                  | direct_declarator . LEFT_ROUND_BRACE identifier_list_opt RIGHT_ROUND_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 109
    LEFT_ROUND_BRACE   shift, and go to state 110

    $default  reduce using rule 129 (declarator)


State 62

  123 enumerator: ENUMERATION_CONSTANT .
  124           | ENUMERATION_CONSTANT . EQUAL constant_expression

    EQUAL  shift, and go to state 111

    $default  reduce using rule 123 (enumerator)


State 63

  116 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list . RIGHT_CURLY_BRACE
  117               | ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list . COMMA RIGHT_CURLY_BRACE
  122 enumerator_list: enumerator_list . COMMA enumerator

    RIGHT_CURLY_BRACE  shift, and go to state 112
    COMMA              shift, and go to state 113


State 64

  121 enumerator_list: enumerator .

    $default  reduce using rule 121 (enumerator_list)


State 65

  147 pointer: MULTIPLICATION type_qualifier_list_opt pointer .

    $default  reduce using rule 147 (pointer)


State 66

  149 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 149 (type_qualifier_list)


State 67

   92 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 68

   93 init_declarator: declarator .
   94                | declarator . EQUAL initializer

    EQUAL  shift, and go to state 54

    $default  reduce using rule 93 (init_declarator)


State 69

   26 unary_expression: SIZEOF_KEYWORD . unary_expression
   27                 | SIZEOF_KEYWORD . LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 114
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 115
    unary_operator      go to state 90


State 70

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 71

    5 constant: INTEGER_CONSTANT .

    $default  reduce using rule 5 (constant)


State 72

    6 constant: FLOATING_CONSTANT .

    $default  reduce using rule 6 (constant)


State 73

    8 constant: ENUMERATION_CONSTANT .

    $default  reduce using rule 8 (constant)


State 74

    7 constant: CHAR_CONSTANT .

    $default  reduce using rule 7 (constant)


State 75

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 76

    4 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE
   16 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   35 cast_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE cast_expression

    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    FLOAT_KEYWORD         shift, and go to state 7
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    RESTRICT_KEYWORD      shift, and go to state 12
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 69
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 117
    type_specifier             go to state 118
    specifier_qualifier_list   go to state 119
    enum_specifier             go to state 26
    type_qualifier             go to state 120
    type_name                  go to state 121


State 77

  160 initializer: LEFT_CURLY_BRACE . initializer_list RIGHT_CURLY_BRACE
  161            | LEFT_CURLY_BRACE . initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 122
    PERIOD             shift, and go to state 123

    $default  reduce using rule 165 (designation_opt)

    initializer_list  go to state 124
    designation_opt   go to state 125
    designation       go to state 126
    designator_list   go to state 127
    designator        go to state 128


State 78

   23 unary_expression: PLUS_PLUS . unary_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 129
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 130
    unary_operator      go to state 90


State 79

   24 unary_expression: MINUS_MINUS . unary_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 129
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 131
    unary_operator      go to state 90


State 80

   28 unary_operator: AMPERSAND .

    $default  reduce using rule 28 (unary_operator)


State 81

   29 unary_operator: MULTIPLICATION .

    $default  reduce using rule 29 (unary_operator)


State 82

   30 unary_operator: PLUS .

    $default  reduce using rule 30 (unary_operator)


State 83

   31 unary_operator: MINUS .

    $default  reduce using rule 31 (unary_operator)


State 84

   32 unary_operator: TILDE .

    $default  reduce using rule 32 (unary_operator)


State 85

   33 unary_operator: EXCLIMATION .

    $default  reduce using rule 33 (unary_operator)


State 86

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 87

    2 primary_expression: constant .

    $default  reduce using rule 2 (primary_expression)


State 88

   10 postfix_expression: postfix_expression . LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
   11                   | postfix_expression . LEFT_ROUND_BRACE argument_expression_list_opt RIGHT_ROUND_BRACE
   12                   | postfix_expression . PERIOD IDENTIFIER
   13                   | postfix_expression . POINTS_TO IDENTIFIER
   14                   | postfix_expression . PLUS_PLUS
   15                   | postfix_expression . MINUS_MINUS
   22 unary_expression: postfix_expression .

    LEFT_SQUARE_BRACE  shift, and go to state 132
    LEFT_ROUND_BRACE   shift, and go to state 133
    PERIOD             shift, and go to state 134
    POINTS_TO          shift, and go to state 135
    PLUS_PLUS          shift, and go to state 136
    MINUS_MINUS        shift, and go to state 137

    $default  reduce using rule 22 (unary_expression)


State 89

   34 cast_expression: unary_expression .
   67 assignment_expression: unary_expression . assignment_operator assignment_expression

    EQUAL                 shift, and go to state 138
    MULTIPLICATION_EQUAL  shift, and go to state 139
    SLASH_EQUAL           shift, and go to state 140
    PERCENTAGE_EQUAL      shift, and go to state 141
    PLUS_EQUAL            shift, and go to state 142
    MINUS_EQUAL           shift, and go to state 143
    LEFT_SHIFT_EQUAL      shift, and go to state 144
    RIGHT_SHIFT_EQUAL     shift, and go to state 145
    BITWISE_AND_EQUAL     shift, and go to state 146
    BITWISE_NOT_EQUAL     shift, and go to state 147
    BITWISE_OR_EQUAL      shift, and go to state 148

    $default  reduce using rule 34 (cast_expression)

    assignment_operator  go to state 149


State 90

   25 unary_expression: unary_operator . cast_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 150
    unary_operator      go to state 90
    cast_expression     go to state 151


State 91

   36 multiplicative_expression: cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 92

   37 multiplicative_expression: multiplicative_expression . MULTIPLICATION cast_expression
   38                          | multiplicative_expression . FORWARD_SLASH cast_expression
   39                          | multiplicative_expression . PERCENTAGE cast_expression
   40 additive_expression: multiplicative_expression .

    MULTIPLICATION  shift, and go to state 152
    FORWARD_SLASH   shift, and go to state 153
    PERCENTAGE      shift, and go to state 154

    $default  reduce using rule 40 (additive_expression)


State 93

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: additive_expression .

    PLUS   shift, and go to state 155
    MINUS  shift, and go to state 156

    $default  reduce using rule 43 (shift_expression)


State 94

   44 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   45                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 46 (relational_expression)


State 95

   47 relational_expression: relational_expression . LESS_THAN shift_expression
   48                      | relational_expression . GREATER_THAN shift_expression
   49                      | relational_expression . LESS_THAN_EQUAL shift_expression
   50                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   51 equality_expression: relational_expression .

    LESS_THAN           shift, and go to state 159
    GREATER_THAN        shift, and go to state 160
    LESS_THAN_EQUAL     shift, and go to state 161
    GREATER_THAN_EQUAL  shift, and go to state 162

    $default  reduce using rule 51 (equality_expression)


State 96

   52 equality_expression: equality_expression . EQUAL_EQUAL relational_expression
   53                    | equality_expression . NOT_EQUAL relational_expression
   54 AND_expression: equality_expression .

    EQUAL_EQUAL  shift, and go to state 163
    NOT_EQUAL    shift, and go to state 164

    $default  reduce using rule 54 (AND_expression)


State 97

   55 AND_expression: AND_expression . AMPERSAND equality_expression
   56 exclusive_OR_expression: AND_expression .

    AMPERSAND  shift, and go to state 165

    $default  reduce using rule 56 (exclusive_OR_expression)


State 98

   57 exclusive_OR_expression: exclusive_OR_expression . CARET AND_expression
   58 inclusive_OR_expression: exclusive_OR_expression .

    CARET  shift, and go to state 166

    $default  reduce using rule 58 (inclusive_OR_expression)


State 99

   59 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   60 logical_AND_expression: inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 167

    $default  reduce using rule 60 (logical_AND_expression)


State 100

   61 logical_AND_expression: logical_AND_expression . LOGICAL_AND inclusive_OR_expression
   62 logical_OR_expression: logical_AND_expression .

    LOGICAL_AND  shift, and go to state 168

    $default  reduce using rule 62 (logical_OR_expression)


State 101

   63 logical_OR_expression: logical_OR_expression . LOGICAL_OR logical_AND_expression
   64 conditional_expression: logical_OR_expression .
   65                       | logical_OR_expression . QUESTION_MARK expression COLON conditional_expression

    LOGICAL_OR     shift, and go to state 169
    QUESTION_MARK  shift, and go to state 170

    $default  reduce using rule 64 (conditional_expression)


State 102

   66 assignment_expression: conditional_expression .

    $default  reduce using rule 66 (assignment_expression)


State 103

  159 initializer: assignment_expression .

    $default  reduce using rule 159 (initializer)


State 104

   94 init_declarator: declarator EQUAL initializer .

    $default  reduce using rule 94 (init_declarator)


State 105

  180 compound_statement: LEFT_CURLY_BRACE . block_item_list_opt RIGHT_CURLY_BRACE

    AUTO_KEYWORD          shift, and go to state 1
    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    EXTERN_KEYWORD        shift, and go to state 6
    FLOAT_KEYWORD         shift, and go to state 7
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    INLINE_KEYWORD        shift, and go to state 8
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    REGISTER_KEYWORD      shift, and go to state 11
    RESTRICT_KEYWORD      shift, and go to state 12
    RETURN_KEYWORD        shift, and go to state 179
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 69
    STATIC_KEYWORD        shift, and go to state 15
    SWITCH_KEYWORD        shift, and go to state 180
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    WHILE_KEYWORD         shift, and go to state 181
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    SEMICOLON_TERMINATOR  reduce using rule 189 (expression_opt)
    $default              reduce using rule 182 (block_item_list_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    declaration                go to state 184
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 185
    labeled_statement          go to state 186
    compound_statement         go to state 187
    block_item_list_opt        go to state 188
    block_item_list            go to state 189
    block_item                 go to state 190
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 106

  205 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 205 (function_definition)


State 107

  209 declaration_list: declaration_list declaration .

    $default  reduce using rule 209 (declaration_list)


State 108

  133 direct_declarator: LEFT_ROUND_BRACE declarator . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 196


State 109

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACE . type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACE
  135                  | direct_declarator LEFT_SQUARE_BRACE . STATIC_KEYWORD type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACE
  136                  | direct_declarator LEFT_SQUARE_BRACE . type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  137                  | direct_declarator LEFT_SQUARE_BRACE . type_qualifier_list_opt MULTIPLICATION RIGHT_SQUARE_BRACE

    CONST_KEYWORD     shift, and go to state 3
    RESTRICT_KEYWORD  shift, and go to state 12
    STATIC_KEYWORD    shift, and go to state 197
    VOLATILE_KEYWORD  shift, and go to state 18

    $default  reduce using rule 141 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 198
    type_qualifier_list      go to state 199


State 110

  138 direct_declarator: direct_declarator LEFT_ROUND_BRACE . parameter_type_list RIGHT_ROUND_BRACE
  139                  | direct_declarator LEFT_ROUND_BRACE . identifier_list_opt RIGHT_ROUND_BRACE

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    IDENTIFIER          shift, and go to state 200

    $default  reduce using rule 145 (identifier_list_opt)

    declaration_specifiers   go to state 201
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    identifier_list_opt      go to state 202
    parameter_type_list      go to state 203
    parameter_list           go to state 204
    parameter_declaration    go to state 205
    identifier_list          go to state 206


State 111

  124 enumerator: ENUMERATION_CONSTANT EQUAL . constant_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 207
    constant_expression        go to state 208


State 112

  116 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 116 (enum_specifier)


State 113

  117 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA . RIGHT_CURLY_BRACE
  122 enumerator_list: enumerator_list COMMA . enumerator

    ENUMERATION_CONSTANT  shift, and go to state 62
    RIGHT_CURLY_BRACE     shift, and go to state 209

    enumerator  go to state 210


State 114

    4 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE
   16 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   27 unary_expression: SIZEOF_KEYWORD LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE

    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    FLOAT_KEYWORD         shift, and go to state 7
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    RESTRICT_KEYWORD      shift, and go to state 12
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 69
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 117
    type_specifier             go to state 118
    specifier_qualifier_list   go to state 119
    enum_specifier             go to state 26
    type_qualifier             go to state 120
    type_name                  go to state 211


State 115

   26 unary_expression: SIZEOF_KEYWORD unary_expression .

    $default  reduce using rule 26 (unary_expression)


State 116

   79 expression: assignment_expression .

    $default  reduce using rule 79 (expression)


State 117

    4 primary_expression: LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE
   80 expression: expression . COMMA assignment_expression

    RIGHT_ROUND_BRACE  shift, and go to state 212
    COMMA              shift, and go to state 213


State 118

  112 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    FLOAT_KEYWORD       shift, and go to state 7
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list_opt)

    type_specifier                go to state 118
    specifier_qualifier_list      go to state 214
    specifier_qualifier_list_opt  go to state 215
    enum_specifier                go to state 26
    type_qualifier                go to state 120


State 119

  158 type_name: specifier_qualifier_list .

    $default  reduce using rule 158 (type_name)


State 120

  113 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    FLOAT_KEYWORD       shift, and go to state 7
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list_opt)

    type_specifier                go to state 118
    specifier_qualifier_list      go to state 214
    specifier_qualifier_list_opt  go to state 216
    enum_specifier                go to state 26
    type_qualifier                go to state 120


State 121

   16 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   35 cast_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE cast_expression

    RIGHT_ROUND_BRACE  shift, and go to state 217


State 122

  169 designator: LEFT_SQUARE_BRACE . constant_expression RIGHT_SQUARE_BRACE

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 207
    constant_expression        go to state 218


State 123

  170 designator: PERIOD . IDENTIFIER

    IDENTIFIER  shift, and go to state 219


State 124

  160 initializer: LEFT_CURLY_BRACE initializer_list . RIGHT_CURLY_BRACE
  161            | LEFT_CURLY_BRACE initializer_list . COMMA RIGHT_CURLY_BRACE
  163 initializer_list: initializer_list . COMMA designation_opt initializer

    RIGHT_CURLY_BRACE  shift, and go to state 220
    COMMA              shift, and go to state 221


State 125

  162 initializer_list: designation_opt . initializer

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 77
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 103
    initializer                go to state 222


State 126

  164 designation_opt: designation .

    $default  reduce using rule 164 (designation_opt)


State 127

  166 designation: designator_list . EQUAL
  168 designator_list: designator_list . designator

    LEFT_SQUARE_BRACE  shift, and go to state 122
    PERIOD             shift, and go to state 123
    EQUAL              shift, and go to state 223

    designator  go to state 224


State 128

  167 designator_list: designator .

    $default  reduce using rule 167 (designator_list)


State 129

    4 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE
   16 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    FLOAT_KEYWORD         shift, and go to state 7
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    RESTRICT_KEYWORD      shift, and go to state 12
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 69
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 117
    type_specifier             go to state 118
    specifier_qualifier_list   go to state 119
    enum_specifier             go to state 26
    type_qualifier             go to state 120
    type_name                  go to state 225


State 130

   23 unary_expression: PLUS_PLUS unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 131

   24 unary_expression: MINUS_MINUS unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 132

   10 postfix_expression: postfix_expression LEFT_SQUARE_BRACE . expression RIGHT_SQUARE_BRACE

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 226


State 133

   11 postfix_expression: postfix_expression LEFT_ROUND_BRACE . argument_expression_list_opt RIGHT_ROUND_BRACE

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 19 (argument_expression_list_opt)

    primary_expression            go to state 86
    constant                      go to state 87
    postfix_expression            go to state 88
    argument_expression_list_opt  go to state 227
    argument_expression_list      go to state 228
    unary_expression              go to state 89
    unary_operator                go to state 90
    cast_expression               go to state 91
    multiplicative_expression     go to state 92
    additive_expression           go to state 93
    shift_expression              go to state 94
    relational_expression         go to state 95
    equality_expression           go to state 96
    AND_expression                go to state 97
    exclusive_OR_expression       go to state 98
    inclusive_OR_expression       go to state 99
    logical_AND_expression        go to state 100
    logical_OR_expression         go to state 101
    conditional_expression        go to state 102
    assignment_expression         go to state 229


State 134

   12 postfix_expression: postfix_expression PERIOD . IDENTIFIER

    IDENTIFIER  shift, and go to state 230


State 135

   13 postfix_expression: postfix_expression POINTS_TO . IDENTIFIER

    IDENTIFIER  shift, and go to state 231


State 136

   14 postfix_expression: postfix_expression PLUS_PLUS .

    $default  reduce using rule 14 (postfix_expression)


State 137

   15 postfix_expression: postfix_expression MINUS_MINUS .

    $default  reduce using rule 15 (postfix_expression)


State 138

   68 assignment_operator: EQUAL .

    $default  reduce using rule 68 (assignment_operator)


State 139

   69 assignment_operator: MULTIPLICATION_EQUAL .

    $default  reduce using rule 69 (assignment_operator)


State 140

   70 assignment_operator: SLASH_EQUAL .

    $default  reduce using rule 70 (assignment_operator)


State 141

   71 assignment_operator: PERCENTAGE_EQUAL .

    $default  reduce using rule 71 (assignment_operator)


State 142

   72 assignment_operator: PLUS_EQUAL .

    $default  reduce using rule 72 (assignment_operator)


State 143

   73 assignment_operator: MINUS_EQUAL .

    $default  reduce using rule 73 (assignment_operator)


State 144

   74 assignment_operator: LEFT_SHIFT_EQUAL .

    $default  reduce using rule 74 (assignment_operator)


State 145

   75 assignment_operator: RIGHT_SHIFT_EQUAL .

    $default  reduce using rule 75 (assignment_operator)


State 146

   76 assignment_operator: BITWISE_AND_EQUAL .

    $default  reduce using rule 76 (assignment_operator)


State 147

   77 assignment_operator: BITWISE_NOT_EQUAL .

    $default  reduce using rule 77 (assignment_operator)


State 148

   78 assignment_operator: BITWISE_OR_EQUAL .

    $default  reduce using rule 78 (assignment_operator)


State 149

   67 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 232


State 150

   34 cast_expression: unary_expression .

    $default  reduce using rule 34 (cast_expression)


State 151

   25 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 25 (unary_expression)


State 152

   37 multiplicative_expression: multiplicative_expression MULTIPLICATION . cast_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 150
    unary_operator      go to state 90
    cast_expression     go to state 233


State 153

   38 multiplicative_expression: multiplicative_expression FORWARD_SLASH . cast_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 150
    unary_operator      go to state 90
    cast_expression     go to state 234


State 154

   39 multiplicative_expression: multiplicative_expression PERCENTAGE . cast_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 150
    unary_operator      go to state 90
    cast_expression     go to state 235


State 155

   41 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 236


State 156

   42 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 237


State 157

   44 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 238


State 158

   45 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 239


State 159

   47 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 240


State 160

   48 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 241


State 161

   49 relational_expression: relational_expression LESS_THAN_EQUAL . shift_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 242


State 162

   50 relational_expression: relational_expression GREATER_THAN_EQUAL . shift_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 243


State 163

   52 equality_expression: equality_expression EQUAL_EQUAL . relational_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 244


State 164

   53 equality_expression: equality_expression NOT_EQUAL . relational_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 245


State 165

   55 AND_expression: AND_expression AMPERSAND . equality_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 246


State 166

   57 exclusive_OR_expression: exclusive_OR_expression CARET . AND_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 247


State 167

   59 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 248


State 168

   61 logical_AND_expression: logical_AND_expression LOGICAL_AND . inclusive_OR_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 249


State 169

   63 logical_OR_expression: logical_OR_expression LOGICAL_OR . logical_AND_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 250


State 170

   65 conditional_expression: logical_OR_expression QUESTION_MARK . expression COLON conditional_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 251


State 171

  199 jump_statement: BREAK_KEYWORD . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 252


State 172

  178 labeled_statement: CASE_KEYWORD . constant_expression COLON statement

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 207
    constant_expression        go to state 253


State 173

  198 jump_statement: CONTINUE_KEYWORD . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 254


State 174

  179 labeled_statement: DEFAULT_KEYWORD . COLON statement

    COLON  shift, and go to state 255


State 175

  194 iteration_statement: DO_KEYWORD . statement WHILE_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 256
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 176

  195 iteration_statement: FOR_KEYWORD . LEFT_ROUND_BRACE expression_opt SEMICOLON_TERMINATOR expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement
  196                    | FOR_KEYWORD . LEFT_ROUND_BRACE declaration expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 257


State 177

  197 jump_statement: GOTO_KEYWORD . IDENTIFIER SEMICOLON_TERMINATOR

    IDENTIFIER  shift, and go to state 258


State 178

  190 selection_statement: IF_KEYWORD . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE_KEYWORD statement
  191                    | IF_KEYWORD . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 259


State 179

  200 jump_statement: RETURN_KEYWORD . expression_opt SEMICOLON_TERMINATOR

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    expression_opt             go to state 260


State 180

  192 selection_statement: SWITCH_KEYWORD . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 261


State 181

  193 iteration_statement: WHILE_KEYWORD . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 262


State 182

    1 primary_expression: IDENTIFIER .
  177 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 263

    $default  reduce using rule 1 (primary_expression)


State 183

   80 expression: expression . COMMA assignment_expression
  188 expression_opt: expression .

    COMMA  shift, and go to state 213

    $default  reduce using rule 188 (expression_opt)


State 184

  185 block_item: declaration .

    $default  reduce using rule 185 (block_item)


State 185

  186 block_item: statement .

    $default  reduce using rule 186 (block_item)


State 186

  171 statement: labeled_statement .

    $default  reduce using rule 171 (statement)


State 187

  172 statement: compound_statement .

    $default  reduce using rule 172 (statement)


State 188

  180 compound_statement: LEFT_CURLY_BRACE block_item_list_opt . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 264


State 189

  181 block_item_list_opt: block_item_list .
  184 block_item_list: block_item_list . block_item

    AUTO_KEYWORD          shift, and go to state 1
    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    EXTERN_KEYWORD        shift, and go to state 6
    FLOAT_KEYWORD         shift, and go to state 7
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    INLINE_KEYWORD        shift, and go to state 8
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    REGISTER_KEYWORD      shift, and go to state 11
    RESTRICT_KEYWORD      shift, and go to state 12
    RETURN_KEYWORD        shift, and go to state 179
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 69
    STATIC_KEYWORD        shift, and go to state 15
    SWITCH_KEYWORD        shift, and go to state 180
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    WHILE_KEYWORD         shift, and go to state 181
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    SEMICOLON_TERMINATOR  reduce using rule 189 (expression_opt)
    $default              reduce using rule 181 (block_item_list_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    declaration                go to state 184
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 185
    labeled_statement          go to state 186
    compound_statement         go to state 187
    block_item                 go to state 265
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 190

  183 block_item_list: block_item .

    $default  reduce using rule 183 (block_item_list)


State 191

  173 statement: expression_statement .

    $default  reduce using rule 173 (statement)


State 192

  187 expression_statement: expression_opt . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 266


State 193

  174 statement: selection_statement .

    $default  reduce using rule 174 (statement)


State 194

  175 statement: iteration_statement .

    $default  reduce using rule 175 (statement)


State 195

  176 statement: jump_statement .

    $default  reduce using rule 176 (statement)


State 196

  133 direct_declarator: LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE .

    $default  reduce using rule 133 (direct_declarator)


State 197

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD . type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACE

    CONST_KEYWORD     shift, and go to state 3
    RESTRICT_KEYWORD  shift, and go to state 12
    VOLATILE_KEYWORD  shift, and go to state 18

    $default  reduce using rule 141 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 267
    type_qualifier_list      go to state 51


State 198

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list_opt . assignment_expression_opt RIGHT_SQUARE_BRACE
  137                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list_opt . MULTIPLICATION RIGHT_SQUARE_BRACE

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 268
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 143 (assignment_expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 269
    assignment_expression_opt  go to state 270


State 199

  136 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list . STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  140 type_qualifier_list_opt: type_qualifier_list .
  149 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_KEYWORD     shift, and go to state 3
    RESTRICT_KEYWORD  shift, and go to state 12
    STATIC_KEYWORD    shift, and go to state 271
    VOLATILE_KEYWORD  shift, and go to state 18

    $default  reduce using rule 140 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 200

  156 identifier_list: IDENTIFIER .

    $default  reduce using rule 156 (identifier_list)


State 201

  154 parameter_declaration: declaration_specifiers . declarator
  155                      | declaration_specifiers .

    MULTIPLICATION  shift, and go to state 34

    RIGHT_ROUND_BRACE  reduce using rule 155 (parameter_declaration)
    COMMA              reduce using rule 155 (parameter_declaration)
    $default           reduce using rule 131 (pointer_opt)

    declarator   go to state 272
    pointer_opt  go to state 39
    pointer      go to state 40


State 202

  139 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_list_opt . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 273


State 203

  138 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 274


State 204

  150 parameter_type_list: parameter_list .
  151                    | parameter_list . COMMA ELIPSES
  153 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 275

    $default  reduce using rule 150 (parameter_type_list)


State 205

  152 parameter_list: parameter_declaration .

    $default  reduce using rule 152 (parameter_list)


State 206

  144 identifier_list_opt: identifier_list .
  157 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 276

    $default  reduce using rule 144 (identifier_list_opt)


State 207

   81 constant_expression: conditional_expression .

    $default  reduce using rule 81 (constant_expression)


State 208

  124 enumerator: ENUMERATION_CONSTANT EQUAL constant_expression .

    $default  reduce using rule 124 (enumerator)


State 209

  117 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 117 (enum_specifier)


State 210

  122 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 122 (enumerator_list)


State 211

   16 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   27 unary_expression: SIZEOF_KEYWORD LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 277


State 212

    4 primary_expression: LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE .

    $default  reduce using rule 4 (primary_expression)


State 213

   80 expression: expression COMMA . assignment_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 278


State 214

  114 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 114 (specifier_qualifier_list_opt)


State 215

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 112 (specifier_qualifier_list)


State 216

  113 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 217

   16 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   35 cast_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . cast_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 279
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 150
    unary_operator      go to state 90
    cast_expression     go to state 280


State 218

  169 designator: LEFT_SQUARE_BRACE constant_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 281


State 219

  170 designator: PERIOD IDENTIFIER .

    $default  reduce using rule 170 (designator)


State 220

  160 initializer: LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 160 (initializer)


State 221

  161 initializer: LEFT_CURLY_BRACE initializer_list COMMA . RIGHT_CURLY_BRACE
  163 initializer_list: initializer_list COMMA . designation_opt initializer

    LEFT_SQUARE_BRACE  shift, and go to state 122
    RIGHT_CURLY_BRACE  shift, and go to state 282
    PERIOD             shift, and go to state 123

    $default  reduce using rule 165 (designation_opt)

    designation_opt  go to state 283
    designation      go to state 126
    designator_list  go to state 127
    designator       go to state 128


State 222

  162 initializer_list: designation_opt initializer .

    $default  reduce using rule 162 (initializer_list)


State 223

  166 designation: designator_list EQUAL .

    $default  reduce using rule 166 (designation)


State 224

  168 designator_list: designator_list designator .

    $default  reduce using rule 168 (designator_list)


State 225

   16 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 284


State 226

   10 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression . RIGHT_SQUARE_BRACE
   80 expression: expression . COMMA assignment_expression

    RIGHT_SQUARE_BRACE  shift, and go to state 285
    COMMA               shift, and go to state 213


State 227

   11 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_list_opt . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 286


State 228

   18 argument_expression_list_opt: argument_expression_list .
   21 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 287

    $default  reduce using rule 18 (argument_expression_list_opt)


State 229

   20 argument_expression_list: assignment_expression .

    $default  reduce using rule 20 (argument_expression_list)


State 230

   12 postfix_expression: postfix_expression PERIOD IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 231

   13 postfix_expression: postfix_expression POINTS_TO IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 232

   67 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 67 (assignment_expression)


State 233

   37 multiplicative_expression: multiplicative_expression MULTIPLICATION cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 234

   38 multiplicative_expression: multiplicative_expression FORWARD_SLASH cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 235

   39 multiplicative_expression: multiplicative_expression PERCENTAGE cast_expression .

    $default  reduce using rule 39 (multiplicative_expression)


State 236

   37 multiplicative_expression: multiplicative_expression . MULTIPLICATION cast_expression
   38                          | multiplicative_expression . FORWARD_SLASH cast_expression
   39                          | multiplicative_expression . PERCENTAGE cast_expression
   41 additive_expression: additive_expression PLUS multiplicative_expression .

    MULTIPLICATION  shift, and go to state 152
    FORWARD_SLASH   shift, and go to state 153
    PERCENTAGE      shift, and go to state 154

    $default  reduce using rule 41 (additive_expression)


State 237

   37 multiplicative_expression: multiplicative_expression . MULTIPLICATION cast_expression
   38                          | multiplicative_expression . FORWARD_SLASH cast_expression
   39                          | multiplicative_expression . PERCENTAGE cast_expression
   42 additive_expression: additive_expression MINUS multiplicative_expression .

    MULTIPLICATION  shift, and go to state 152
    FORWARD_SLASH   shift, and go to state 153
    PERCENTAGE      shift, and go to state 154

    $default  reduce using rule 42 (additive_expression)


State 238

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   44 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    PLUS   shift, and go to state 155
    MINUS  shift, and go to state 156

    $default  reduce using rule 44 (shift_expression)


State 239

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   45 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    PLUS   shift, and go to state 155
    MINUS  shift, and go to state 156

    $default  reduce using rule 45 (shift_expression)


State 240

   44 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   45                 | shift_expression . RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 47 (relational_expression)


State 241

   44 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   45                 | shift_expression . RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 48 (relational_expression)


State 242

   44 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   45                 | shift_expression . RIGHT_SHIFT additive_expression
   49 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression .

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 49 (relational_expression)


State 243

   44 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   45                 | shift_expression . RIGHT_SHIFT additive_expression
   50 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression .

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 50 (relational_expression)


State 244

   47 relational_expression: relational_expression . LESS_THAN shift_expression
   48                      | relational_expression . GREATER_THAN shift_expression
   49                      | relational_expression . LESS_THAN_EQUAL shift_expression
   50                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   52 equality_expression: equality_expression EQUAL_EQUAL relational_expression .

    LESS_THAN           shift, and go to state 159
    GREATER_THAN        shift, and go to state 160
    LESS_THAN_EQUAL     shift, and go to state 161
    GREATER_THAN_EQUAL  shift, and go to state 162

    $default  reduce using rule 52 (equality_expression)


State 245

   47 relational_expression: relational_expression . LESS_THAN shift_expression
   48                      | relational_expression . GREATER_THAN shift_expression
   49                      | relational_expression . LESS_THAN_EQUAL shift_expression
   50                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   53 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN           shift, and go to state 159
    GREATER_THAN        shift, and go to state 160
    LESS_THAN_EQUAL     shift, and go to state 161
    GREATER_THAN_EQUAL  shift, and go to state 162

    $default  reduce using rule 53 (equality_expression)


State 246

   52 equality_expression: equality_expression . EQUAL_EQUAL relational_expression
   53                    | equality_expression . NOT_EQUAL relational_expression
   55 AND_expression: AND_expression AMPERSAND equality_expression .

    EQUAL_EQUAL  shift, and go to state 163
    NOT_EQUAL    shift, and go to state 164

    $default  reduce using rule 55 (AND_expression)


State 247

   55 AND_expression: AND_expression . AMPERSAND equality_expression
   57 exclusive_OR_expression: exclusive_OR_expression CARET AND_expression .

    AMPERSAND  shift, and go to state 165

    $default  reduce using rule 57 (exclusive_OR_expression)


State 248

   57 exclusive_OR_expression: exclusive_OR_expression . CARET AND_expression
   59 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .

    CARET  shift, and go to state 166

    $default  reduce using rule 59 (inclusive_OR_expression)


State 249

   59 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   61 logical_AND_expression: logical_AND_expression LOGICAL_AND inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 167

    $default  reduce using rule 61 (logical_AND_expression)


State 250

   61 logical_AND_expression: logical_AND_expression . LOGICAL_AND inclusive_OR_expression
   63 logical_OR_expression: logical_OR_expression LOGICAL_OR logical_AND_expression .

    LOGICAL_AND  shift, and go to state 168

    $default  reduce using rule 63 (logical_OR_expression)


State 251

   65 conditional_expression: logical_OR_expression QUESTION_MARK expression . COLON conditional_expression
   80 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 288
    COMMA  shift, and go to state 213


State 252

  199 jump_statement: BREAK_KEYWORD SEMICOLON_TERMINATOR .

    $default  reduce using rule 199 (jump_statement)


State 253

  178 labeled_statement: CASE_KEYWORD constant_expression . COLON statement

    COLON  shift, and go to state 289


State 254

  198 jump_statement: CONTINUE_KEYWORD SEMICOLON_TERMINATOR .

    $default  reduce using rule 198 (jump_statement)


State 255

  179 labeled_statement: DEFAULT_KEYWORD COLON . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 290
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 256

  194 iteration_statement: DO_KEYWORD statement . WHILE_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    WHILE_KEYWORD  shift, and go to state 291


State 257

  195 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE . expression_opt SEMICOLON_TERMINATOR expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement
  196                    | FOR_KEYWORD LEFT_ROUND_BRACE . declaration expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement

    AUTO_KEYWORD          shift, and go to state 1
    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    EXTERN_KEYWORD        shift, and go to state 6
    FLOAT_KEYWORD         shift, and go to state 7
    INLINE_KEYWORD        shift, and go to state 8
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    REGISTER_KEYWORD      shift, and go to state 11
    RESTRICT_KEYWORD      shift, and go to state 12
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 69
    STATIC_KEYWORD        shift, and go to state 15
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    declaration                go to state 292
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 293


State 258

  197 jump_statement: GOTO_KEYWORD IDENTIFIER . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 294


State 259

  190 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement ELSE_KEYWORD statement
  191                    | IF_KEYWORD LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 295


State 260

  200 jump_statement: RETURN_KEYWORD expression_opt . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 296


State 261

  192 selection_statement: SWITCH_KEYWORD LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 297


State 262

  193 iteration_statement: WHILE_KEYWORD LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 298


State 263

  177 labeled_statement: IDENTIFIER COLON . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 299
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 264

  180 compound_statement: LEFT_CURLY_BRACE block_item_list_opt RIGHT_CURLY_BRACE .

    $default  reduce using rule 180 (compound_statement)


State 265

  184 block_item_list: block_item_list block_item .

    $default  reduce using rule 184 (block_item_list)


State 266

  187 expression_statement: expression_opt SEMICOLON_TERMINATOR .

    $default  reduce using rule 187 (expression_statement)


State 267

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list_opt . assignment_expression RIGHT_SQUARE_BRACE

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 300


State 268

   29 unary_operator: MULTIPLICATION .
  137 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list_opt MULTIPLICATION . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 301

    $default  reduce using rule 29 (unary_operator)


State 269

  142 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 142 (assignment_expression_opt)


State 270

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list_opt assignment_expression_opt . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 302


State 271

  136 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD . assignment_expression RIGHT_SQUARE_BRACE

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 303


State 272

  154 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 154 (parameter_declaration)


State 273

  139 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_list_opt RIGHT_ROUND_BRACE .

    $default  reduce using rule 139 (direct_declarator)


State 274

  138 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 138 (direct_declarator)


State 275

  151 parameter_type_list: parameter_list COMMA . ELIPSES
  153 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    ELIPSES             shift, and go to state 304

    declaration_specifiers   go to state 201
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 305


State 276

  157 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 306


State 277

   16 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   27 unary_expression: SIZEOF_KEYWORD LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE .

    LEFT_CURLY_BRACE  shift, and go to state 279

    $default  reduce using rule 27 (unary_expression)


State 278

   80 expression: expression COMMA assignment_expression .

    $default  reduce using rule 80 (expression)


State 279

   16 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE . initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE . initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 122
    PERIOD             shift, and go to state 123

    $default  reduce using rule 165 (designation_opt)

    initializer_list  go to state 307
    designation_opt   go to state 125
    designation       go to state 126
    designator_list   go to state 127
    designator        go to state 128


State 280

   35 cast_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE cast_expression .

    $default  reduce using rule 35 (cast_expression)


State 281

  169 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 169 (designator)


State 282

  161 initializer: LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 161 (initializer)


State 283

  163 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 77
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 103
    initializer                go to state 308


State 284

   16 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 279


State 285

   10 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 10 (postfix_expression)


State 286

   11 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_list_opt RIGHT_ROUND_BRACE .

    $default  reduce using rule 11 (postfix_expression)


State 287

   21 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 309


State 288

   65 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON . conditional_expression

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 150
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 310


State 289

  178 labeled_statement: CASE_KEYWORD constant_expression COLON . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 311
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 290

  179 labeled_statement: DEFAULT_KEYWORD COLON statement .

    $default  reduce using rule 179 (labeled_statement)


State 291

  194 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    LEFT_ROUND_BRACE  shift, and go to state 312


State 292

  196 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration . expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    expression_opt             go to state 313


State 293

  195 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_opt . SEMICOLON_TERMINATOR expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement

    SEMICOLON_TERMINATOR  shift, and go to state 314


State 294

  197 jump_statement: GOTO_KEYWORD IDENTIFIER SEMICOLON_TERMINATOR .

    $default  reduce using rule 197 (jump_statement)


State 295

   80 expression: expression . COMMA assignment_expression
  190 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement ELSE_KEYWORD statement
  191                    | IF_KEYWORD LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 315
    COMMA              shift, and go to state 213


State 296

  200 jump_statement: RETURN_KEYWORD expression_opt SEMICOLON_TERMINATOR .

    $default  reduce using rule 200 (jump_statement)


State 297

   80 expression: expression . COMMA assignment_expression
  192 selection_statement: SWITCH_KEYWORD LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 316
    COMMA              shift, and go to state 213


State 298

   80 expression: expression . COMMA assignment_expression
  193 iteration_statement: WHILE_KEYWORD LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 317
    COMMA              shift, and go to state 213


State 299

  177 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 177 (labeled_statement)


State 300

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list_opt assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 318


State 301

  137 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list_opt MULTIPLICATION RIGHT_SQUARE_BRACE .

    $default  reduce using rule 137 (direct_declarator)


State 302

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACE .

    $default  reduce using rule 134 (direct_declarator)


State 303

  136 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 319


State 304

  151 parameter_type_list: parameter_list COMMA ELIPSES .

    $default  reduce using rule 151 (parameter_type_list)


State 305

  153 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 153 (parameter_list)


State 306

  157 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 157 (identifier_list)


State 307

   16 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list . RIGHT_CURLY_BRACE
   17                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list . COMMA RIGHT_CURLY_BRACE
  163 initializer_list: initializer_list . COMMA designation_opt initializer

    RIGHT_CURLY_BRACE  shift, and go to state 320
    COMMA              shift, and go to state 321


State 308

  163 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 163 (initializer_list)


State 309

   21 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 21 (argument_expression_list)


State 310

   65 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 65 (conditional_expression)


State 311

  178 labeled_statement: CASE_KEYWORD constant_expression COLON statement .

    $default  reduce using rule 178 (labeled_statement)


State 312

  194 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 322


State 313

  196 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_opt . SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement

    SEMICOLON_TERMINATOR  shift, and go to state 323


State 314

  195 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_opt SEMICOLON_TERMINATOR . expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    expression_opt             go to state 324


State 315

  190 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement ELSE_KEYWORD statement
  191                    | IF_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 325
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 316

  192 selection_statement: SWITCH_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 326
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 317

  193 iteration_statement: WHILE_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 327
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 318

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 135 (direct_declarator)


State 319

  136 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 136 (direct_declarator)


State 320

   16 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 16 (postfix_expression)


State 321

   17 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA . RIGHT_CURLY_BRACE
  163 initializer_list: initializer_list COMMA . designation_opt initializer

    LEFT_SQUARE_BRACE  shift, and go to state 122
    RIGHT_CURLY_BRACE  shift, and go to state 328
    PERIOD             shift, and go to state 123

    $default  reduce using rule 165 (designation_opt)

    designation_opt  go to state 283
    designation      go to state 126
    designator_list  go to state 127
    designator       go to state 128


State 322

   80 expression: expression . COMMA assignment_expression
  194 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    RIGHT_ROUND_BRACE  shift, and go to state 329
    COMMA              shift, and go to state 213


State 323

  196 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_opt SEMICOLON_TERMINATOR . expression_opt RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    expression_opt             go to state 330


State 324

  195 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_opt SEMICOLON_TERMINATOR expression_opt . SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement

    SEMICOLON_TERMINATOR  shift, and go to state 331


State 325

  190 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement . ELSE_KEYWORD statement
  191                    | IF_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    ELSE_KEYWORD  shift, and go to state 332

    ELSE_KEYWORD  [reduce using rule 191 (selection_statement)]
    $default      reduce using rule 191 (selection_statement)


State 326

  192 selection_statement: SWITCH_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 192 (selection_statement)


State 327

  193 iteration_statement: WHILE_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 193 (iteration_statement)


State 328

   17 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 17 (postfix_expression)


State 329

  194 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 333


State 330

  196 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_opt SEMICOLON_TERMINATOR expression_opt . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 334


State 331

  195 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_opt SEMICOLON_TERMINATOR expression_opt SEMICOLON_TERMINATOR . expression_opt RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 69
    IDENTIFIER            shift, and go to state 70
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    expression_opt             go to state 335


State 332

  190 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE_KEYWORD . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 336
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 333

  194 iteration_statement: DO_KEYWORD statement WHILE_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR .

    $default  reduce using rule 194 (iteration_statement)


State 334

  196 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 337
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 335

  195 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_opt SEMICOLON_TERMINATOR expression_opt SEMICOLON_TERMINATOR expression_opt . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 338


State 336

  190 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE_KEYWORD statement .

    $default  reduce using rule 190 (selection_statement)


State 337

  196 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 196 (iteration_statement)


State 338

  195 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_opt SEMICOLON_TERMINATOR expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE . statement

    BREAK_KEYWORD         shift, and go to state 171
    CASE_KEYWORD          shift, and go to state 172
    CONTINUE_KEYWORD      shift, and go to state 173
    DEFAULT_KEYWORD       shift, and go to state 174
    DO_KEYWORD            shift, and go to state 175
    FOR_KEYWORD           shift, and go to state 176
    GOTO_KEYWORD          shift, and go to state 177
    IF_KEYWORD            shift, and go to state 178
    RETURN_KEYWORD        shift, and go to state 179
    SIZEOF_KEYWORD        shift, and go to state 69
    SWITCH_KEYWORD        shift, and go to state 180
    WHILE_KEYWORD         shift, and go to state 181
    IDENTIFIER            shift, and go to state 182
    INTEGER_CONSTANT      shift, and go to state 71
    FLOATING_CONSTANT     shift, and go to state 72
    ENUMERATION_CONSTANT  shift, and go to state 73
    CHAR_CONSTANT         shift, and go to state 74
    STRING_LITERAL        shift, and go to state 75
    LEFT_ROUND_BRACE      shift, and go to state 76
    LEFT_CURLY_BRACE      shift, and go to state 105
    PLUS_PLUS             shift, and go to state 78
    MINUS_MINUS           shift, and go to state 79
    AMPERSAND             shift, and go to state 80
    MULTIPLICATION        shift, and go to state 81
    PLUS                  shift, and go to state 82
    MINUS                 shift, and go to state 83
    TILDE                 shift, and go to state 84
    EXCLIMATION           shift, and go to state 85

    $default  reduce using rule 189 (expression_opt)

    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    unary_operator             go to state 90
    cast_expression            go to state 91
    multiplicative_expression  go to state 92
    additive_expression        go to state 93
    shift_expression           go to state 94
    relational_expression      go to state 95
    equality_expression        go to state 96
    AND_expression             go to state 97
    exclusive_OR_expression    go to state 98
    inclusive_OR_expression    go to state 99
    logical_AND_expression     go to state 100
    logical_OR_expression      go to state 101
    conditional_expression     go to state 102
    assignment_expression      go to state 116
    expression                 go to state 183
    statement                  go to state 339
    labeled_statement          go to state 186
    compound_statement         go to state 187
    expression_statement       go to state 191
    expression_opt             go to state 192
    selection_statement        go to state 193
    iteration_statement        go to state 194
    jump_statement             go to state 195


State 339

  195 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_opt SEMICOLON_TERMINATOR expression_opt SEMICOLON_TERMINATOR expression_opt RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 195 (iteration_statement)
