2
THE PARSER RULES ARE
********************************************************************************************************************
********************************************************************************************************************
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
direct_declarator -> direct_declarator LEFT_ROUND_BRACE RIGHT_ROUND_BRACE
 declarator -> direct_declarator
init_declarator->declarator
init_declarator_list ->init_declarator 
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
external_declaration ->function_definition
translation_unit -> external_declaration
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
direct_declarator -> direct_declarator LEFT_ROUND_BRACE RIGHT_ROUND_BRACE
 declarator -> direct_declarator
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list ->init_declarator 
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
direct_declarator ->IDENTIFIER 
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
direct_declarator -> direct_declarator LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
block_item ->declaration
block_item_list ->block_item 
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list ->init_declarator 
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
block_item ->declaration
block_item_list ->block_item_list M block_item  
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
pointer -> MULTIPLICATIONdirect_declarator ->IDENTIFIER 
declarator ->pointer direct_declarator 
init_declarator->declarator
init_declarator_list ->init_declarator 
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
block_item ->declaration
block_item_list ->block_item_list M block_item  
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list ->init_declarator 
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
block_item ->declaration
block_item_list ->block_item_list M block_item  
p
0xc66740
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
unary_operator-> AMPERSAND
error
0xc666e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
unary_expression-> unary_operator cast_expression 
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xc667c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xc5ff20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
i
0xc66440
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
i
0xc66440
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression -> relational_expression LESS_THAN shift_expression  
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
i
0xc66440
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
postfix_expression-> postfix_expression PLUS_PLUS 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
A
0xc66640
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
i
0xc66440
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
postfix_expression-> postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
unary_expression-> postfix_expression
assignment_operator -> EQUAL
readi
0xc602c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_operator-> AMPERSAND
error
0xc666e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
unary_expression-> unary_operator cast_expression 
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item 
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
statement ->compound_statement
iteration_statement->FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M  expression_statement N   M expression N RIGHT_ROUND_BRACE M  statement 
statement ->iteration_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xc667c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xc5ff20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
search
0xc66540
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
readi
0xc602c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_operator-> AMPERSAND
error
0xc666e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
unary_expression-> unary_operator cast_expression 
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
first
0xc66480
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
last
0xc664c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
middle
0xc66500
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
first
0xc66480
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
last
0xc664c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
The additive has the name ..first
The additive has the name ..last
additive_expression-> additive_expression PLUS multiplicative_expression 
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
primary_expression-> LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> multiplicative_expression FORWARD_SLASH cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
found
0xc66800
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
first
0xc66480
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
last
0xc664c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression ->relational_expression LESS_THAN_EQUAL shift_expression
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
A
0xc66640
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
middle
0xc66500
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
postfix_expression-> postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
search
0xc66540
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression -> relational_expression LESS_THAN shift_expression  
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
first
0xc66480
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
middle
0xc66500
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
The additive has the name ..middle
The additive has the name ..t021
additive_expression-> additive_expression PLUS multiplicative_expression 
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
A
0xc66640
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
middle
0xc66500
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
postfix_expression-> postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
search
0xc66540
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->equality_expression EQUAL_EQUAL relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
dummy
0xc667c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xc5ff20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item 
dummy
0xc667c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
printi
0xc600e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
middle
0xc66500
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
The additive has the name ..middle
The additive has the name ..t027
additive_expression-> additive_expression PLUS multiplicative_expression 
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xc667c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xc5ff20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
last
0xc664c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
unary_operator-> MINUS
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
unary_expression-> unary_operator cast_expression 
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
found
0xc66800
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
statement ->compound_statement
last
0xc664c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
middle
0xc66500
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> additive_expression MINUS multiplicative_expression 
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
selection_statement ->IF_KEYWORD LEFT_ROUND_BRACE expression N  RIGHT_ROUND_BRACE M  statement N  ELSE_KEYWORD M statement  
statement ->selection_statement 
selection_statement ->IF_KEYWORD LEFT_ROUND_BRACE expression N  RIGHT_ROUND_BRACE M  statement N  ELSE_KEYWORD M statement  
statement ->selection_statement 
block_item ->statement
block_item_list ->block_item 
middle
0xc66500
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
first
0xc66480
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
last
0xc664c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
The additive has the name ..first
The additive has the name ..last
additive_expression-> additive_expression PLUS multiplicative_expression 
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
primary_expression-> LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> multiplicative_expression FORWARD_SLASH cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
statement ->compound_statement
iteration_statement ->WHILE_KEYWORD M LEFT_ROUND_BRACE expression N  RIGHT_ROUND_BRACE M  statement  
statement ->iteration_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
found
0xc66800
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->equality_expression EQUAL_EQUAL relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
dummy
0xc667c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xc5ff20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item 
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
statement ->compound_statement
selection_statement -> IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N 
statement ->selection_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
jump_statement ->RETURN_KEYWORD expression SEMICOLON_TERMINATOR 
statement ->jump_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
function_definition->declaration_specifiers declarator F compound_statement
external_declaration ->function_definition
translation_unit -> translation_unit external_declaration
THIS IS THE END OF PARSING
********************************************************************************************************************
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
GLOBAL SYMBOL TABLE : 
----------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|    prints| function |         0|         0|       nil|prints SYMBOL TABLE

|    printi| function |         0|         0|       nil|printi SYMBOL TABLE

|     readi| function |         0|         0|       nil|readi SYMBOL TABLE

|      main| function |         0|         0|       nil|main SYMBOL TABLE

prints SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         s|  pointer (char )|         4|         0|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

printi SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         i|      int |         4|         0|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

readi SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|        ep|  pointer (int )|         4|         0|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

main SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|    RETURN|      int |         4|         0|       nil|       nil

|         i|      int |         4|         4|       nil|       nil

|     first|      int |         4|         8|       nil|       nil

|      last|      int |         4|        12|       nil|       nil

|    middle|      int |         4|        16|       nil|       nil

|    search|      int |         4|        20|       nil|       nil

|      t000|      int |         4|        24|       nil|       nil

|         A|    array (10,int )|        40|        28|       nil|       nil

|     error|      int |         4|        68|       nil|       nil

|         p|  pointer (int )|         4|        72|       nil|       nil

|     dummy|      int |         4|        76|       nil|       nil

|     found|      int |         4|        80|       nil|       nil

|        t0|  pointer (int )|         8|        84|       nil|       nil

|      t001|      int |         4|        92|       nil|       nil

|      t002|      int |         4|        96|       nil|       nil

|      t003|      int |         4|       100|       nil|       nil

|      t004|      int |         4|       104|       nil|       nil

|      t005|      int |         4|       108|       nil|       nil

|      t006|      int |         4|       112|       nil|       nil

|      t007|      int |         4|       116|       nil|       nil

|      t008|      int |         4|       120|       nil|       nil

|        t1|  pointer (int )|         8|       124|       nil|       nil

|      t009|      int |         4|       132|       nil|       nil

|      t010|      int |         4|       136|       nil|       nil

|        t2|  pointer (int )|         8|       140|       nil|       nil

|      t011|      int |         4|       148|       nil|       nil

|      t012|      int |         4|       152|       nil|       nil

|      t013|      int |         4|       156|       nil|       nil

|      t014|      int |         4|       160|       nil|       nil

|      t015|      int |         4|       164|       nil|       nil

|      t016|      int |         4|       168|       nil|       nil

|      t017|      int |         4|       172|       nil|       nil

|      t018|      int |         4|       176|       nil|       nil

|      t019|      int |         4|       180|       nil|       nil

|      t020|      int |         4|       184|       nil|       nil

|      t021|      int |         4|       188|       nil|       nil

|      t022|      int |         4|       192|       nil|       nil

|      t023|      int |         4|       196|       nil|       nil

|      t024|      int |         4|       200|       nil|       nil

|      t025|      int |         4|       204|       nil|       nil

|      t026|      int |         4|       208|       nil|       nil

|      t027|      int |         4|       212|       nil|       nil

|      t028|      int |         4|       216|       nil|       nil

|      t029|      int |         4|       220|       nil|       nil

|      t030|      int |         4|       224|       nil|       nil

|      t031|      int |         4|       228|       nil|       nil

|      t032|      int |         4|       232|       nil|       nil

|      t033|      int |         4|       236|       nil|       nil

|      t034|      int |         4|       240|       nil|       nil

|      t035|      int |         4|       244|       nil|       nil

|      t036|      int |         4|       248|       nil|       nil

|      t037|      int |         4|       252|       nil|       nil

|      t038|      int |         4|       256|       nil|       nil

|      t039|      int |         4|       260|       nil|       nil

|      t040|      int |         4|       264|       nil|       nil

|      t041|      int |         4|       268|       nil|       nil

THE THREE ADDRESS CODES ARE AS FOLLOWS : 
------------------------------------------------------------------------------------------------------------------
*************************************
0 -> main  - FUNCTION 
*************************************
1 -> t000 = 10
2 -> t0 = & error
3 -> p = t0
4 -> param .LFE0
5 -> t001 = call prints, 1
6 -> dummy = t001
7 -> t002 = 0
8 -> i = t002
9 -> t003 = 10
10 -> if i < t003 goto 17
11 -> goto 25
12 -> goto 25
13 -> t004 = i
14 -> t005 = 1
15 -> i = i + t005
16 -> goto 9
17 -> t007 = 4
18 -> t006 = i * t007
19 -> t008 = A[t006]
20 -> t1 = & error
21 -> param t1
22 -> t009 = call readi, 1
23 -> A[t006] = t009
24 -> goto 13
25 -> param .LFE1
26 -> t010 = call prints, 1
27 -> dummy = t010
28 -> t2 = & error
29 -> param t2
30 -> t011 = call readi, 1
31 -> search = t011
32 -> t012 = 0
33 -> first = t012
34 -> t013 = 9
35 -> last = t013
36 -> t014 = first + last
37 -> t015 = 2
38 -> t016 = t014 / t015
39 -> middle = t016
40 -> t017 = 0
41 -> found = t017
42 -> if first <= last goto 45
43 -> goto 86
44 -> goto 86
45 -> t019 = 4
46 -> t018 = middle * t019
47 -> t020 = A[t018]
48 -> if t020 < search goto 51
49 -> goto 55
50 -> goto 81
51 -> t021 = 1
52 -> t022 = middle + t021
53 -> first = t022
54 -> goto 81
55 -> t024 = 4
56 -> t023 = middle * t024
57 -> t025 = A[t023]
58 -> if t025 == search goto 61
59 -> goto 78
60 -> goto 81
61 -> param .LFE2
62 -> t026 = call prints, 1
63 -> dummy = t026
64 -> t027 = 1
65 -> t028 = middle + t027
66 -> param t028
67 -> t029 = call printi, 1
68 -> dummy = t029
69 -> param .LFE3
70 -> t030 = call prints, 1
71 -> dummy = t030
72 -> t031 = 10
73 -> t032 = - t031
74 -> last = t032
75 -> t033 = 1
76 -> found = t033
77 -> goto 81
78 -> t034 = 1
79 -> t035 = middle - t034
80 -> last = t035
81 -> t036 = first + last
82 -> t037 = 2
83 -> t038 = t036 / t037
84 -> middle = t038
85 -> goto 42
86 -> t039 = 0
87 -> if found == t039 goto 90
88 -> goto 94
89 -> goto 94
90 -> param .LFE4
91 -> t040 = call prints, 1
92 -> dummy = t040
93 -> goto 94
94 -> t041 = 0
95 -> return t041
updated symbol table is
-----------------------------------------------------------------------------------------------------------------
GLOBAL SYMBOL TABLE : 
----------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|    prints| function |         0|         0|       nil|prints SYMBOL TABLE

|    printi| function |         0|         0|       nil|printi SYMBOL TABLE

|     readi| function |         0|         0|       nil|readi SYMBOL TABLE

|      main| function |         0|         0|       nil|main SYMBOL TABLE

prints SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         s|  pointer (char )|         8|        -8|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

printi SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         i|      int |         4|        -4|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

readi SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|        ep|  pointer (int )|         8|        -8|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

main SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|    RETURN|      int |         4|         0|       nil|       nil

|         i|      int |         4|        -4|       nil|       nil

|     first|      int |         4|        -8|       nil|       nil

|      last|      int |         4|       -12|       nil|       nil

|    middle|      int |         4|       -16|       nil|       nil

|    search|      int |         4|       -20|       nil|       nil

|      t000|      int |         4|       -24|       nil|       nil

|         A|    array (10,int )|        40|       -64|       nil|       nil

|     error|      int |         4|       -68|       nil|       nil

|         p|  pointer (int )|         8|       -76|       nil|       nil

|     dummy|      int |         4|       -80|       nil|       nil

|     found|      int |         4|       -84|       nil|       nil

|        t0|  pointer (int )|         8|       -92|       nil|       nil

|      t001|      int |         4|       -96|       nil|       nil

|      t002|      int |         4|      -100|       nil|       nil

|      t003|      int |         4|      -104|       nil|       nil

|      t004|      int |         4|      -108|       nil|       nil

|      t005|      int |         4|      -112|       nil|       nil

|      t006|      int |         4|      -116|       nil|       nil

|      t007|      int |         4|      -120|       nil|       nil

|      t008|      int |         4|      -124|       nil|       nil

|        t1|  pointer (int )|         8|      -132|       nil|       nil

|      t009|      int |         4|      -136|       nil|       nil

|      t010|      int |         4|      -140|       nil|       nil

|        t2|  pointer (int )|         8|      -148|       nil|       nil

|      t011|      int |         4|      -152|       nil|       nil

|      t012|      int |         4|      -156|       nil|       nil

|      t013|      int |         4|      -160|       nil|       nil

|      t014|      int |         4|      -164|       nil|       nil

|      t015|      int |         4|      -168|       nil|       nil

|      t016|      int |         4|      -172|       nil|       nil

|      t017|      int |         4|      -176|       nil|       nil

|      t018|      int |         4|      -180|       nil|       nil

|      t019|      int |         4|      -184|       nil|       nil

|      t020|      int |         4|      -188|       nil|       nil

|      t021|      int |         4|      -192|       nil|       nil

|      t022|      int |         4|      -196|       nil|       nil

|      t023|      int |         4|      -200|       nil|       nil

|      t024|      int |         4|      -204|       nil|       nil

|      t025|      int |         4|      -208|       nil|       nil

|      t026|      int |         4|      -212|       nil|       nil

|      t027|      int |         4|      -216|       nil|       nil

|      t028|      int |         4|      -220|       nil|       nil

|      t029|      int |         4|      -224|       nil|       nil

|      t030|      int |         4|      -228|       nil|       nil

|      t031|      int |         4|      -232|       nil|       nil

|      t032|      int |         4|      -236|       nil|       nil

|      t033|      int |         4|      -240|       nil|       nil

|      t034|      int |         4|      -244|       nil|       nil

|      t035|      int |         4|      -248|       nil|       nil

|      t036|      int |         4|      -252|       nil|       nil

|      t037|      int |         4|      -256|       nil|       nil

|      t038|      int |         4|      -260|       nil|       nil

|      t039|      int |         4|      -264|       nil|       nil

|      t040|      int |         4|      -268|       nil|       nil

|      t041|      int |         4|      -272|       nil|       nil

