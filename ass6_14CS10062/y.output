Terminals unused in grammar

   STRUCT_KEYWORD
   TYPEDEF_KEYWORD
   UNION_KEYWORD
   ENUMERATION_CONSTANT
   HASH
   SINGLE_LINE_COMMENT
   NEW_LINE
   IF_FIRST


State 354 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 statement: labeled_statement
    2          | compound_statement
    3          | expression_statement
    4          | selection_statement
    5          | iteration_statement
    6          | jump_statement

    7 labeled_statement: IDENTIFIER COLON statement
    8                  | CASE_KEYWORD constant_expression COLON statement
    9                  | DEFAULT_KEYWORD COLON statement

   10 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   11                   | LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE

   12 block_item_list: block_item
   13                | block_item_list M block_item

   14 block_item: declaration
   15           | statement

   16 expression_statement: SEMICOLON_TERMINATOR
   17                     | expression SEMICOLON_TERMINATOR

   18 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N
   19                    | IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE_KEYWORD M statement
   20                    | SWITCH_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

   21 iteration_statement: WHILE_KEYWORD M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement
   22                    | DO_KEYWORD M statement M WHILE_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR
   23                    | FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement N M expression N RIGHT_ROUND_BRACE M statement
   24                    | FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_statement expression_statement RIGHT_ROUND_BRACE statement

   25 jump_statement: GOTO_KEYWORD IDENTIFIER SEMICOLON_TERMINATOR
   26               | CONTINUE_KEYWORD SEMICOLON_TERMINATOR
   27               | BREAK_KEYWORD SEMICOLON_TERMINATOR
   28               | RETURN_KEYWORD SEMICOLON_TERMINATOR
   29               | RETURN_KEYWORD expression SEMICOLON_TERMINATOR

   30 translation_unit: external_declaration
   31                 | translation_unit external_declaration

   32 external_declaration: function_definition
   33                     | declaration

   34 function_definition: declaration_specifiers declarator declaration_list compound_statement
   35                    | declaration_specifiers declarator F compound_statement

   36 declaration_list: declaration
   37                 | declaration_list declaration

   38 expression: assignment_expression
   39           | expression COMMA assignment_expression

   40 constant_expression: conditional_expression

   41 assignment_expression: conditional_expression
   42                      | unary_expression assignment_operator assignment_expression

   43 assignment_operator: EQUAL
   44                    | MULTIPLICATION_EQUAL
   45                    | SLASH_EQUAL
   46                    | PERCENTAGE_EQUAL
   47                    | PLUS_EQUAL
   48                    | MINUS_EQUAL
   49                    | LEFT_SHIFT_EQUAL
   50                    | RIGHT_SHIFT_EQUAL
   51                    | BITWISE_AND_EQUAL
   52                    | BITWISE_NOT_EQUAL
   53                    | BITWISE_OR_EQUAL

   54 conditional_expression: logical_OR_expression
   55                       | logical_OR_expression N QUESTION_MARK M expression N COLON M conditional_expression

   56 logical_OR_expression: logical_AND_expression
   57                      | logical_OR_expression LOGICAL_OR M logical_AND_expression

   58 logical_AND_expression: inclusive_OR_expression
   59                       | logical_AND_expression LOGICAL_AND M inclusive_OR_expression

   60 inclusive_OR_expression: exclusive_OR_expression
   61                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   62 exclusive_OR_expression: AND_expression
   63                        | exclusive_OR_expression CARET AND_expression

   64 AND_expression: equality_expression
   65               | AND_expression AMPERSAND equality_expression

   66 equality_expression: relational_expression
   67                    | equality_expression EQUAL_EQUAL relational_expression
   68                    | equality_expression NOT_EQUAL relational_expression

   69 relational_expression: shift_expression
   70                      | relational_expression LESS_THAN shift_expression
   71                      | relational_expression GREATER_THAN shift_expression
   72                      | relational_expression LESS_THAN_EQUAL shift_expression
   73                      | relational_expression GREATER_THAN_EQUAL shift_expression

   74 shift_expression: additive_expression
   75                 | shift_expression LEFT_SHIFT additive_expression
   76                 | shift_expression RIGHT_SHIFT additive_expression

   77 additive_expression: multiplicative_expression
   78                    | additive_expression PLUS multiplicative_expression
   79                    | additive_expression MINUS multiplicative_expression

   80 multiplicative_expression: cast_expression
   81                          | multiplicative_expression MULTIPLICATION cast_expression
   82                          | multiplicative_expression FORWARD_SLASH cast_expression
   83                          | multiplicative_expression PERCENTAGE cast_expression

   84 cast_expression: unary_expression
   85                | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE cast_expression

   86 unary_operator: AMPERSAND
   87               | MULTIPLICATION
   88               | PLUS
   89               | MINUS
   90               | TILDE
   91               | EXCLIMATION

   92 unary_expression: postfix_expression
   93                 | PLUS_PLUS unary_expression
   94                 | MINUS_MINUS unary_expression
   95                 | unary_operator cast_expression
   96                 | SIZEOF_KEYWORD unary_expression
   97                 | SIZEOF_KEYWORD LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE

   98 argument_expression_list: assignment_expression
   99                         | argument_expression_list COMMA assignment_expression

  100 postfix_expression: primary_expression
  101                   | postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
  102                   | postfix_expression LEFT_ROUND_BRACE RIGHT_ROUND_BRACE
  103                   | postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
  104                   | postfix_expression PERIOD IDENTIFIER
  105                   | postfix_expression POINTS_TO IDENTIFIER
  106                   | postfix_expression PLUS_PLUS
  107                   | postfix_expression MINUS_MINUS
  108                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

  110 primary_expression: IDENTIFIER
  111                   | constant
  112                   | STRING_LITERAL
  113                   | LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE

  114 constant: INTEGER_CONSTANT
  115         | FLOATING_CONSTANT
  116         | CHAR_CONSTANT

  117 enumeration_constant: IDENTIFIER

  118 M: %empty

  119 N: %empty

  120 declaration: declaration_specifiers SEMICOLON_TERMINATOR
  121            | declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR

  122 declaration_specifiers: storage_class_specifier
  123                       | storage_class_specifier declaration_specifiers
  124                       | type_specifier
  125                       | type_specifier declaration_specifiers
  126                       | type_qualifier
  127                       | type_qualifier declaration_specifiers
  128                       | function_specifier
  129                       | function_specifier declaration_specifiers

  130 init_declarator_list: init_declarator
  131                     | init_declarator_list COMMA init_declarator

  132 init_declarator: declarator
  133                | declarator EQUAL initializer

  134 storage_class_specifier: EXTERN_KEYWORD
  135                        | STATIC_KEYWORD
  136                        | AUTO_KEYWORD
  137                        | REGISTER_KEYWORD

  138 type_specifier: VOID_KEYWORD
  139               | CHAR_KEYWORD
  140               | SHORT_KEYWORD
  141               | INT_KEYWORD
  142               | LONG_KEYWORD
  143               | FLOAT_KEYWORD
  144               | DOUBLE_KEYWORD
  145               | SIGNED_KEYWORD
  146               | UNSIGNED_KEYWORD
  147               | _BOOL_KEYWORD
  148               | _COMPLEX_KEYWORD
  149               | _IMAGINARY_KEYWORD
  150               | enum_specifier

  151 specifier_qualifier_list: type_specifier specifier_qualifier_list
  152                         | type_specifier
  153                         | type_qualifier specifier_qualifier_list
  154                         | type_qualifier

  155 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  156               | ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE
  157               | ENUM_KEYWORD IDENTIFIER

  158 identifier_opt: IDENTIFIER
  159               | %empty

  160 enumerator_list: enumerator
  161                | enumerator_list COMMA enumerator

  162 enumerator: enumeration_constant
  163           | enumeration_constant EQUAL constant_expression

  164 type_qualifier: CONST_KEYWORD
  165               | RESTRICT_KEYWORD
  166               | VOLATILE_KEYWORD

  167 function_specifier: INLINE_KEYWORD

  168 declarator: pointer direct_declarator
  169           | direct_declarator

  170 direct_declarator: IDENTIFIER
  171                  | LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE
  172                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  173                  | direct_declarator LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE
  174                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list RIGHT_SQUARE_BRACE
  175                  | direct_declarator LEFT_SQUARE_BRACE RIGHT_SQUARE_BRACE
  176                  | direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  177                  | direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  178                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  179                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list MULTIPLICATION RIGHT_SQUARE_BRACE
  180                  | direct_declarator LEFT_SQUARE_BRACE MULTIPLICATION RIGHT_SQUARE_BRACE
  181                  | direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  182                  | direct_declarator LEFT_ROUND_BRACE identifier_list RIGHT_ROUND_BRACE
  183                  | direct_declarator LEFT_ROUND_BRACE RIGHT_ROUND_BRACE

  184 pointer: MULTIPLICATION
  185        | MULTIPLICATION type_qualifier_list
  186        | MULTIPLICATION pointer
  187        | MULTIPLICATION type_qualifier_list pointer

  188 type_qualifier_list: type_qualifier
  189                    | type_qualifier_list type_qualifier

  190 parameter_type_list: parameter_list
  191                    | parameter_list COMMA ELIPSES

  192 parameter_list: parameter_declaration
  193               | parameter_list COMMA parameter_declaration

  194 parameter_declaration: declaration_specifiers declarator
  195                      | declaration_specifiers

  196 identifier_list: IDENTIFIER
  197                | identifier_list COMMA IDENTIFIER

  198 type_name: specifier_qualifier_list

  199 initializer: assignment_expression
  200            | LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  201            | LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

  202 initializer_list: designation_opt initializer
  203                 | initializer_list COMMA designation_opt initializer

  204 designation_opt: designation
  205                | %empty

  206 designation: designator_list EQUAL

  207 designator_list: designator
  208                | designator_list designator

  209 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE
  210           | PERIOD IDENTIFIER

  211 F: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
AUTO_KEYWORD (258) 136
BREAK_KEYWORD (259) 27
CASE_KEYWORD (260) 8
CHAR_KEYWORD (261) 139
CONST_KEYWORD (262) 164
CONTINUE_KEYWORD (263) 26
DEFAULT_KEYWORD (264) 9
DO_KEYWORD (265) 22
DOUBLE_KEYWORD (266) 144
ELSE_KEYWORD (267) 19
ENUM_KEYWORD (268) 155 156 157
EXTERN_KEYWORD (269) 134
FLOAT_KEYWORD (270) 143
FOR_KEYWORD (271) 23 24
GOTO_KEYWORD (272) 25
IF_KEYWORD (273) 18 19
INLINE_KEYWORD (274) 167
INT_KEYWORD (275) 141
LONG_KEYWORD (276) 142
REGISTER_KEYWORD (277) 137
RESTRICT_KEYWORD (278) 165
RETURN_KEYWORD (279) 28 29
SHORT_KEYWORD (280) 140
SIGNED_KEYWORD (281) 145
SIZEOF_KEYWORD (282) 96 97
STATIC_KEYWORD (283) 135 176 177 178
STRUCT_KEYWORD (284)
SWITCH_KEYWORD (285) 20
TYPEDEF_KEYWORD (286)
UNION_KEYWORD (287)
UNSIGNED_KEYWORD (288) 146
VOID_KEYWORD (289) 138
VOLATILE_KEYWORD (290) 166
WHILE_KEYWORD (291) 21 22
_BOOL_KEYWORD (292) 147
_COMPLEX_KEYWORD (293) 148
_IMAGINARY_KEYWORD (294) 149
IDENTIFIER (295) 7 25 104 105 110 117 157 158 170 196 197 210
ENUMERATION_CONSTANT (296)
INTEGER_CONSTANT (297) 114
FLOATING_CONSTANT (298) 115
CHAR_CONSTANT (299) 116
STRING_LITERAL (300) 112
LEFT_SQUARE_BRACE (301) 101 172 173 174 175 176 177 178 179 180 209
RIGHT_SQUARE_BRACE (302) 101 172 173 174 175 176 177 178 179 180 209
LEFT_ROUND_BRACE (303) 18 19 20 21 22 23 24 85 97 102 103 108 109 113
    171 181 182 183
RIGHT_ROUND_BRACE (304) 18 19 20 21 22 23 24 85 97 102 103 108 109
    113 171 181 182 183
LEFT_CURLY_BRACE (305) 10 11 108 109 155 156 200 201
RIGHT_CURLY_BRACE (306) 10 11 108 109 155 156 200 201
PERIOD (307) 104 210
POINTS_TO (308) 105
PLUS_PLUS (309) 93 106
MINUS_MINUS (310) 94 107
AMPERSAND (311) 65 86
MULTIPLICATION (312) 81 87 179 180 184 185 186 187
PLUS (313) 78 88
MINUS (314) 79 89
TILDE (315) 90
EXCLIMATION (316) 91
FORWARD_SLASH (317) 82
PERCENTAGE (318) 83
LEFT_SHIFT (319) 75
RIGHT_SHIFT (320) 76
LESS_THAN (321) 70
GREATER_THAN (322) 71
LESS_THAN_EQUAL (323) 72
GREATER_THAN_EQUAL (324) 73
EQUAL_EQUAL (325) 67
NOT_EQUAL (326) 68
CARET (327) 63
BITWISE_OR (328) 61
LOGICAL_AND (329) 59
LOGICAL_OR (330) 57
QUESTION_MARK (331) 55
COLON (332) 7 8 9 55
SEMICOLON_TERMINATOR (333) 16 17 22 25 26 27 28 29 120 121
ELIPSES (334) 191
EQUAL (335) 43 133 163 206
MULTIPLICATION_EQUAL (336) 44
SLASH_EQUAL (337) 45
PERCENTAGE_EQUAL (338) 46
PLUS_EQUAL (339) 47
MINUS_EQUAL (340) 48
LEFT_SHIFT_EQUAL (341) 49
RIGHT_SHIFT_EQUAL (342) 50
BITWISE_AND_EQUAL (343) 51
BITWISE_NOT_EQUAL (344) 52
BITWISE_OR_EQUAL (345) 53
COMMA (346) 39 99 109 131 156 161 191 193 197 201 203
HASH (347)
SINGLE_LINE_COMMENT (348)
NEW_LINE (349)
IF_FIRST (350)


Nonterminals, with rules where they appear

$accept (96)
    on left: 0
statement (97)
    on left: 1 2 3 4 5 6, on right: 7 8 9 15 18 19 20 21 22 23 24
labeled_statement (98)
    on left: 7 8 9, on right: 1
compound_statement (99)
    on left: 10 11, on right: 2 34 35
block_item_list (100)
    on left: 12 13, on right: 11 13
block_item (101)
    on left: 14 15, on right: 12 13
expression_statement (102)
    on left: 16 17, on right: 3 23 24
selection_statement (103)
    on left: 18 19 20, on right: 4
iteration_statement (104)
    on left: 21 22 23 24, on right: 5
jump_statement (105)
    on left: 25 26 27 28 29, on right: 6
translation_unit (106)
    on left: 30 31, on right: 0 31
external_declaration (107)
    on left: 32 33, on right: 30 31
function_definition (108)
    on left: 34 35, on right: 32
declaration_list (109)
    on left: 36 37, on right: 34 37
expression (110)
    on left: 38 39, on right: 17 18 19 20 21 22 23 29 39 55 101 113
constant_expression (111)
    on left: 40, on right: 8 163 209
assignment_expression (112)
    on left: 41 42, on right: 38 39 42 98 99 172 173 176 177 178 199
assignment_operator (113)
    on left: 43 44 45 46 47 48 49 50 51 52 53, on right: 42
conditional_expression (114)
    on left: 54 55, on right: 40 41 55
logical_OR_expression (115)
    on left: 56 57, on right: 54 55 57
logical_AND_expression (116)
    on left: 58 59, on right: 56 57 59
inclusive_OR_expression (117)
    on left: 60 61, on right: 58 59 61
exclusive_OR_expression (118)
    on left: 62 63, on right: 60 61 63
AND_expression (119)
    on left: 64 65, on right: 62 63 65
equality_expression (120)
    on left: 66 67 68, on right: 64 65 67 68
relational_expression (121)
    on left: 69 70 71 72 73, on right: 66 67 68 70 71 72 73
shift_expression (122)
    on left: 74 75 76, on right: 69 70 71 72 73 75 76
additive_expression (123)
    on left: 77 78 79, on right: 74 75 76 78 79
multiplicative_expression (124)
    on left: 80 81 82 83, on right: 77 78 79 81 82 83
cast_expression (125)
    on left: 84 85, on right: 80 81 82 83 85 95
unary_operator (126)
    on left: 86 87 88 89 90 91, on right: 95
unary_expression (127)
    on left: 92 93 94 95 96 97, on right: 42 84 93 94 96
argument_expression_list (128)
    on left: 98 99, on right: 99 103
postfix_expression (129)
    on left: 100 101 102 103 104 105 106 107 108 109, on right: 92
    101 102 103 104 105 106 107
primary_expression (130)
    on left: 110 111 112 113, on right: 100
constant (131)
    on left: 114 115 116, on right: 111
enumeration_constant (132)
    on left: 117, on right: 162 163
M (133)
    on left: 118, on right: 13 18 19 21 22 23 55 57 59
N (134)
    on left: 119, on right: 18 19 21 22 23 55
declaration (135)
    on left: 120 121, on right: 14 24 33 36 37
declaration_specifiers (136)
    on left: 122 123 124 125 126 127 128 129, on right: 34 35 120 121
    123 125 127 129 194 195
init_declarator_list (137)
    on left: 130 131, on right: 121 131
init_declarator (138)
    on left: 132 133, on right: 130 131
storage_class_specifier (139)
    on left: 134 135 136 137, on right: 122 123
type_specifier (140)
    on left: 138 139 140 141 142 143 144 145 146 147 148 149 150, on right:
    124 125 151 152
specifier_qualifier_list (141)
    on left: 151 152 153 154, on right: 151 153 198
enum_specifier (142)
    on left: 155 156 157, on right: 150
identifier_opt (143)
    on left: 158 159, on right: 155 156
enumerator_list (144)
    on left: 160 161, on right: 155 156 161
enumerator (145)
    on left: 162 163, on right: 160 161
type_qualifier (146)
    on left: 164 165 166, on right: 126 127 153 154 188 189
function_specifier (147)
    on left: 167, on right: 128 129
declarator (148)
    on left: 168 169, on right: 34 35 132 133 171 194
direct_declarator (149)
    on left: 170 171 172 173 174 175 176 177 178 179 180 181 182 183,
    on right: 168 169 172 173 174 175 176 177 178 179 180 181 182 183
pointer (150)
    on left: 184 185 186 187, on right: 168 186 187
type_qualifier_list (151)
    on left: 188 189, on right: 172 174 176 178 179 185 187 189
parameter_type_list (152)
    on left: 190 191, on right: 181
parameter_list (153)
    on left: 192 193, on right: 190 191 193
parameter_declaration (154)
    on left: 194 195, on right: 192 193
identifier_list (155)
    on left: 196 197, on right: 182 197
type_name (156)
    on left: 198, on right: 85 97 108 109
initializer (157)
    on left: 199 200 201, on right: 133 202 203
initializer_list (158)
    on left: 202 203, on right: 108 109 200 201 203
designation_opt (159)
    on left: 204 205, on right: 202 203
designation (160)
    on left: 206, on right: 204
designator_list (161)
    on left: 207 208, on right: 206 208
designator (162)
    on left: 209 210, on right: 207 208
F (163)
    on left: 211, on right: 35


State 0

    0 $accept: . translation_unit $end

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    translation_unit         go to state 22
    external_declaration     go to state 23
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 1

  136 storage_class_specifier: AUTO_KEYWORD .

    $default  reduce using rule 136 (storage_class_specifier)


State 2

  139 type_specifier: CHAR_KEYWORD .

    $default  reduce using rule 139 (type_specifier)


State 3

  164 type_qualifier: CONST_KEYWORD .

    $default  reduce using rule 164 (type_qualifier)


State 4

  144 type_specifier: DOUBLE_KEYWORD .

    $default  reduce using rule 144 (type_specifier)


State 5

  155 enum_specifier: ENUM_KEYWORD . identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  156               | ENUM_KEYWORD . identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE
  157               | ENUM_KEYWORD . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 159 (identifier_opt)

    identifier_opt  go to state 33


State 6

  134 storage_class_specifier: EXTERN_KEYWORD .

    $default  reduce using rule 134 (storage_class_specifier)


State 7

  143 type_specifier: FLOAT_KEYWORD .

    $default  reduce using rule 143 (type_specifier)


State 8

  167 function_specifier: INLINE_KEYWORD .

    $default  reduce using rule 167 (function_specifier)


State 9

  141 type_specifier: INT_KEYWORD .

    $default  reduce using rule 141 (type_specifier)


State 10

  142 type_specifier: LONG_KEYWORD .

    $default  reduce using rule 142 (type_specifier)


State 11

  137 storage_class_specifier: REGISTER_KEYWORD .

    $default  reduce using rule 137 (storage_class_specifier)


State 12

  165 type_qualifier: RESTRICT_KEYWORD .

    $default  reduce using rule 165 (type_qualifier)


State 13

  140 type_specifier: SHORT_KEYWORD .

    $default  reduce using rule 140 (type_specifier)


State 14

  145 type_specifier: SIGNED_KEYWORD .

    $default  reduce using rule 145 (type_specifier)


State 15

  135 storage_class_specifier: STATIC_KEYWORD .

    $default  reduce using rule 135 (storage_class_specifier)


State 16

  146 type_specifier: UNSIGNED_KEYWORD .

    $default  reduce using rule 146 (type_specifier)


State 17

  138 type_specifier: VOID_KEYWORD .

    $default  reduce using rule 138 (type_specifier)


State 18

  166 type_qualifier: VOLATILE_KEYWORD .

    $default  reduce using rule 166 (type_qualifier)


State 19

  147 type_specifier: _BOOL_KEYWORD .

    $default  reduce using rule 147 (type_specifier)


State 20

  148 type_specifier: _COMPLEX_KEYWORD .

    $default  reduce using rule 148 (type_specifier)


State 21

  149 type_specifier: _IMAGINARY_KEYWORD .

    $default  reduce using rule 149 (type_specifier)


State 22

    0 $accept: translation_unit . $end
   31 translation_unit: translation_unit . external_declaration

    $end                shift, and go to state 34
    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    external_declaration     go to state 35
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 23

   30 translation_unit: external_declaration .

    $default  reduce using rule 30 (translation_unit)


State 24

   32 external_declaration: function_definition .

    $default  reduce using rule 32 (external_declaration)


State 25

   33 external_declaration: declaration .

    $default  reduce using rule 33 (external_declaration)


State 26

   34 function_definition: declaration_specifiers . declarator declaration_list compound_statement
   35                    | declaration_specifiers . declarator F compound_statement
  120 declaration: declaration_specifiers . SEMICOLON_TERMINATOR
  121            | declaration_specifiers . init_declarator_list SEMICOLON_TERMINATOR

    IDENTIFIER            shift, and go to state 36
    LEFT_ROUND_BRACE      shift, and go to state 37
    MULTIPLICATION        shift, and go to state 38
    SEMICOLON_TERMINATOR  shift, and go to state 39

    init_declarator_list  go to state 40
    init_declarator       go to state 41
    declarator            go to state 42
    direct_declarator     go to state 43
    pointer               go to state 44


State 27

  122 declaration_specifiers: storage_class_specifier .
  123                       | storage_class_specifier . declaration_specifiers

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 122 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 28

  124 declaration_specifiers: type_specifier .
  125                       | type_specifier . declaration_specifiers

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 124 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 29

  150 type_specifier: enum_specifier .

    $default  reduce using rule 150 (type_specifier)


State 30

  126 declaration_specifiers: type_qualifier .
  127                       | type_qualifier . declaration_specifiers

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 126 (declaration_specifiers)

    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 31

  128 declaration_specifiers: function_specifier .
  129                       | function_specifier . declaration_specifiers

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 128 (declaration_specifiers)

    declaration_specifiers   go to state 48
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 32

  157 enum_specifier: ENUM_KEYWORD IDENTIFIER .
  158 identifier_opt: IDENTIFIER .

    LEFT_CURLY_BRACE  reduce using rule 158 (identifier_opt)
    $default          reduce using rule 157 (enum_specifier)


State 33

  155 enum_specifier: ENUM_KEYWORD identifier_opt . LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  156               | ENUM_KEYWORD identifier_opt . LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 49


State 34

    0 $accept: translation_unit $end .

    $default  accept


State 35

   31 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 31 (translation_unit)


State 36

  170 direct_declarator: IDENTIFIER .

    $default  reduce using rule 170 (direct_declarator)


State 37

  171 direct_declarator: LEFT_ROUND_BRACE . declarator RIGHT_ROUND_BRACE

    IDENTIFIER        shift, and go to state 36
    LEFT_ROUND_BRACE  shift, and go to state 37
    MULTIPLICATION    shift, and go to state 38

    declarator         go to state 50
    direct_declarator  go to state 43
    pointer            go to state 44


State 38

  184 pointer: MULTIPLICATION .
  185        | MULTIPLICATION . type_qualifier_list
  186        | MULTIPLICATION . pointer
  187        | MULTIPLICATION . type_qualifier_list pointer

    CONST_KEYWORD     shift, and go to state 3
    RESTRICT_KEYWORD  shift, and go to state 12
    VOLATILE_KEYWORD  shift, and go to state 18
    MULTIPLICATION    shift, and go to state 38

    $default  reduce using rule 184 (pointer)

    type_qualifier       go to state 51
    pointer              go to state 52
    type_qualifier_list  go to state 53


State 39

  120 declaration: declaration_specifiers SEMICOLON_TERMINATOR .

    $default  reduce using rule 120 (declaration)


State 40

  121 declaration: declaration_specifiers init_declarator_list . SEMICOLON_TERMINATOR
  131 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON_TERMINATOR  shift, and go to state 54
    COMMA                 shift, and go to state 55


State 41

  130 init_declarator_list: init_declarator .

    $default  reduce using rule 130 (init_declarator_list)


State 42

   34 function_definition: declaration_specifiers declarator . declaration_list compound_statement
   35                    | declaration_specifiers declarator . F compound_statement
  132 init_declarator: declarator .
  133                | declarator . EQUAL initializer

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    EQUAL               shift, and go to state 56

    LEFT_CURLY_BRACE  reduce using rule 211 (F)
    $default          reduce using rule 132 (init_declarator)

    declaration_list         go to state 57
    declaration              go to state 58
    declaration_specifiers   go to state 59
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    F                        go to state 60


State 43

  169 declarator: direct_declarator .
  172 direct_declarator: direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  173                  | direct_declarator . LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE
  174                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list RIGHT_SQUARE_BRACE
  175                  | direct_declarator . LEFT_SQUARE_BRACE RIGHT_SQUARE_BRACE
  176                  | direct_declarator . LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  177                  | direct_declarator . LEFT_SQUARE_BRACE STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  178                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  179                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list MULTIPLICATION RIGHT_SQUARE_BRACE
  180                  | direct_declarator . LEFT_SQUARE_BRACE MULTIPLICATION RIGHT_SQUARE_BRACE
  181                  | direct_declarator . LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  182                  | direct_declarator . LEFT_ROUND_BRACE identifier_list RIGHT_ROUND_BRACE
  183                  | direct_declarator . LEFT_ROUND_BRACE RIGHT_ROUND_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 61
    LEFT_ROUND_BRACE   shift, and go to state 62

    $default  reduce using rule 169 (declarator)


State 44

  168 declarator: pointer . direct_declarator

    IDENTIFIER        shift, and go to state 36
    LEFT_ROUND_BRACE  shift, and go to state 37

    direct_declarator  go to state 63


State 45

  123 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 123 (declaration_specifiers)


State 46

  125 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 125 (declaration_specifiers)


State 47

  127 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 127 (declaration_specifiers)


State 48

  129 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 129 (declaration_specifiers)


State 49

  155 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE . enumerator_list RIGHT_CURLY_BRACE
  156               | ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE . enumerator_list COMMA RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 64

    enumeration_constant  go to state 65
    enumerator_list       go to state 66
    enumerator            go to state 67


State 50

  171 direct_declarator: LEFT_ROUND_BRACE declarator . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 68


State 51

  188 type_qualifier_list: type_qualifier .

    $default  reduce using rule 188 (type_qualifier_list)


State 52

  186 pointer: MULTIPLICATION pointer .

    $default  reduce using rule 186 (pointer)


State 53

  185 pointer: MULTIPLICATION type_qualifier_list .
  187        | MULTIPLICATION type_qualifier_list . pointer
  189 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_KEYWORD     shift, and go to state 3
    RESTRICT_KEYWORD  shift, and go to state 12
    VOLATILE_KEYWORD  shift, and go to state 18
    MULTIPLICATION    shift, and go to state 38

    $default  reduce using rule 185 (pointer)

    type_qualifier  go to state 69
    pointer         go to state 70


State 54

  121 declaration: declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR .

    $default  reduce using rule 121 (declaration)


State 55

  131 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER        shift, and go to state 36
    LEFT_ROUND_BRACE  shift, and go to state 37
    MULTIPLICATION    shift, and go to state 38

    init_declarator    go to state 71
    declarator         go to state 72
    direct_declarator  go to state 43
    pointer            go to state 44


State 56

  133 init_declarator: declarator EQUAL . initializer

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    LEFT_CURLY_BRACE   shift, and go to state 80
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 89
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    initializer                go to state 107


State 57

   34 function_definition: declaration_specifiers declarator declaration_list . compound_statement
   37 declaration_list: declaration_list . declaration

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    LEFT_CURLY_BRACE    shift, and go to state 108

    compound_statement       go to state 109
    declaration              go to state 110
    declaration_specifiers   go to state 59
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 58

   36 declaration_list: declaration .

    $default  reduce using rule 36 (declaration_list)


State 59

  120 declaration: declaration_specifiers . SEMICOLON_TERMINATOR
  121            | declaration_specifiers . init_declarator_list SEMICOLON_TERMINATOR

    IDENTIFIER            shift, and go to state 36
    LEFT_ROUND_BRACE      shift, and go to state 37
    MULTIPLICATION        shift, and go to state 38
    SEMICOLON_TERMINATOR  shift, and go to state 39

    init_declarator_list  go to state 40
    init_declarator       go to state 41
    declarator            go to state 72
    direct_declarator     go to state 43
    pointer               go to state 44


State 60

   35 function_definition: declaration_specifiers declarator F . compound_statement

    LEFT_CURLY_BRACE  shift, and go to state 108

    compound_statement  go to state 111


State 61

  172 direct_declarator: direct_declarator LEFT_SQUARE_BRACE . type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  173                  | direct_declarator LEFT_SQUARE_BRACE . assignment_expression RIGHT_SQUARE_BRACE
  174                  | direct_declarator LEFT_SQUARE_BRACE . type_qualifier_list RIGHT_SQUARE_BRACE
  175                  | direct_declarator LEFT_SQUARE_BRACE . RIGHT_SQUARE_BRACE
  176                  | direct_declarator LEFT_SQUARE_BRACE . STATIC_KEYWORD type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  177                  | direct_declarator LEFT_SQUARE_BRACE . STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  178                  | direct_declarator LEFT_SQUARE_BRACE . type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  179                  | direct_declarator LEFT_SQUARE_BRACE . type_qualifier_list MULTIPLICATION RIGHT_SQUARE_BRACE
  180                  | direct_declarator LEFT_SQUARE_BRACE . MULTIPLICATION RIGHT_SQUARE_BRACE

    CONST_KEYWORD       shift, and go to state 3
    RESTRICT_KEYWORD    shift, and go to state 12
    SIZEOF_KEYWORD      shift, and go to state 73
    STATIC_KEYWORD      shift, and go to state 112
    VOLATILE_KEYWORD    shift, and go to state 18
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHAR_CONSTANT       shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    RIGHT_SQUARE_BRACE  shift, and go to state 113
    LEFT_ROUND_BRACE    shift, and go to state 79
    PLUS_PLUS           shift, and go to state 81
    MINUS_MINUS         shift, and go to state 82
    AMPERSAND           shift, and go to state 83
    MULTIPLICATION      shift, and go to state 114
    PLUS                shift, and go to state 85
    MINUS               shift, and go to state 86
    TILDE               shift, and go to state 87
    EXCLIMATION         shift, and go to state 88

    assignment_expression      go to state 115
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    type_qualifier             go to state 51
    type_qualifier_list        go to state 116


State 62

  181 direct_declarator: direct_declarator LEFT_ROUND_BRACE . parameter_type_list RIGHT_ROUND_BRACE
  182                  | direct_declarator LEFT_ROUND_BRACE . identifier_list RIGHT_ROUND_BRACE
  183                  | direct_declarator LEFT_ROUND_BRACE . RIGHT_ROUND_BRACE

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    IDENTIFIER          shift, and go to state 117
    RIGHT_ROUND_BRACE   shift, and go to state 118

    declaration_specifiers   go to state 119
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_type_list      go to state 120
    parameter_list           go to state 121
    parameter_declaration    go to state 122
    identifier_list          go to state 123


State 63

  168 declarator: pointer direct_declarator .
  172 direct_declarator: direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  173                  | direct_declarator . LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE
  174                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list RIGHT_SQUARE_BRACE
  175                  | direct_declarator . LEFT_SQUARE_BRACE RIGHT_SQUARE_BRACE
  176                  | direct_declarator . LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  177                  | direct_declarator . LEFT_SQUARE_BRACE STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  178                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  179                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list MULTIPLICATION RIGHT_SQUARE_BRACE
  180                  | direct_declarator . LEFT_SQUARE_BRACE MULTIPLICATION RIGHT_SQUARE_BRACE
  181                  | direct_declarator . LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  182                  | direct_declarator . LEFT_ROUND_BRACE identifier_list RIGHT_ROUND_BRACE
  183                  | direct_declarator . LEFT_ROUND_BRACE RIGHT_ROUND_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 61
    LEFT_ROUND_BRACE   shift, and go to state 62

    $default  reduce using rule 168 (declarator)


State 64

  117 enumeration_constant: IDENTIFIER .

    $default  reduce using rule 117 (enumeration_constant)


State 65

  162 enumerator: enumeration_constant .
  163           | enumeration_constant . EQUAL constant_expression

    EQUAL  shift, and go to state 124

    $default  reduce using rule 162 (enumerator)


State 66

  155 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list . RIGHT_CURLY_BRACE
  156               | ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list . COMMA RIGHT_CURLY_BRACE
  161 enumerator_list: enumerator_list . COMMA enumerator

    RIGHT_CURLY_BRACE  shift, and go to state 125
    COMMA              shift, and go to state 126


State 67

  160 enumerator_list: enumerator .

    $default  reduce using rule 160 (enumerator_list)


State 68

  171 direct_declarator: LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE .

    $default  reduce using rule 171 (direct_declarator)


State 69

  189 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 189 (type_qualifier_list)


State 70

  187 pointer: MULTIPLICATION type_qualifier_list pointer .

    $default  reduce using rule 187 (pointer)


State 71

  131 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 131 (init_declarator_list)


State 72

  132 init_declarator: declarator .
  133                | declarator . EQUAL initializer

    EQUAL  shift, and go to state 56

    $default  reduce using rule 132 (init_declarator)


State 73

   96 unary_expression: SIZEOF_KEYWORD . unary_expression
   97                 | SIZEOF_KEYWORD . LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 127
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    unary_operator      go to state 102
    unary_expression    go to state 128
    postfix_expression  go to state 104
    primary_expression  go to state 105
    constant            go to state 106


State 74

  110 primary_expression: IDENTIFIER .

    $default  reduce using rule 110 (primary_expression)


State 75

  114 constant: INTEGER_CONSTANT .

    $default  reduce using rule 114 (constant)


State 76

  115 constant: FLOATING_CONSTANT .

    $default  reduce using rule 115 (constant)


State 77

  116 constant: CHAR_CONSTANT .

    $default  reduce using rule 116 (constant)


State 78

  112 primary_expression: STRING_LITERAL .

    $default  reduce using rule 112 (primary_expression)


State 79

   85 cast_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE cast_expression
  108 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
  113 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE

    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    FLOAT_KEYWORD       shift, and go to state 7
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    SIZEOF_KEYWORD      shift, and go to state 73
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHAR_CONSTANT       shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    LEFT_ROUND_BRACE    shift, and go to state 79
    PLUS_PLUS           shift, and go to state 81
    MINUS_MINUS         shift, and go to state 82
    AMPERSAND           shift, and go to state 83
    MULTIPLICATION      shift, and go to state 84
    PLUS                shift, and go to state 85
    MINUS               shift, and go to state 86
    TILDE               shift, and go to state 87
    EXCLIMATION         shift, and go to state 88

    expression                 go to state 129
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    type_specifier             go to state 131
    specifier_qualifier_list   go to state 132
    enum_specifier             go to state 29
    type_qualifier             go to state 133
    type_name                  go to state 134


State 80

  200 initializer: LEFT_CURLY_BRACE . initializer_list RIGHT_CURLY_BRACE
  201            | LEFT_CURLY_BRACE . initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 135
    PERIOD             shift, and go to state 136

    $default  reduce using rule 205 (designation_opt)

    initializer_list  go to state 137
    designation_opt   go to state 138
    designation       go to state 139
    designator_list   go to state 140
    designator        go to state 141


State 81

   93 unary_expression: PLUS_PLUS . unary_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 142
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    unary_operator      go to state 102
    unary_expression    go to state 143
    postfix_expression  go to state 104
    primary_expression  go to state 105
    constant            go to state 106


State 82

   94 unary_expression: MINUS_MINUS . unary_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 142
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    unary_operator      go to state 102
    unary_expression    go to state 144
    postfix_expression  go to state 104
    primary_expression  go to state 105
    constant            go to state 106


State 83

   86 unary_operator: AMPERSAND .

    $default  reduce using rule 86 (unary_operator)


State 84

   87 unary_operator: MULTIPLICATION .

    $default  reduce using rule 87 (unary_operator)


State 85

   88 unary_operator: PLUS .

    $default  reduce using rule 88 (unary_operator)


State 86

   89 unary_operator: MINUS .

    $default  reduce using rule 89 (unary_operator)


State 87

   90 unary_operator: TILDE .

    $default  reduce using rule 90 (unary_operator)


State 88

   91 unary_operator: EXCLIMATION .

    $default  reduce using rule 91 (unary_operator)


State 89

  199 initializer: assignment_expression .

    $default  reduce using rule 199 (initializer)


State 90

   41 assignment_expression: conditional_expression .

    $default  reduce using rule 41 (assignment_expression)


State 91

   54 conditional_expression: logical_OR_expression .
   55                       | logical_OR_expression . N QUESTION_MARK M expression N COLON M conditional_expression
   57 logical_OR_expression: logical_OR_expression . LOGICAL_OR M logical_AND_expression

    LOGICAL_OR  shift, and go to state 145

    QUESTION_MARK  reduce using rule 119 (N)
    $default       reduce using rule 54 (conditional_expression)

    N  go to state 146


State 92

   56 logical_OR_expression: logical_AND_expression .
   59 logical_AND_expression: logical_AND_expression . LOGICAL_AND M inclusive_OR_expression

    LOGICAL_AND  shift, and go to state 147

    $default  reduce using rule 56 (logical_OR_expression)


State 93

   58 logical_AND_expression: inclusive_OR_expression .
   61 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression

    BITWISE_OR  shift, and go to state 148

    $default  reduce using rule 58 (logical_AND_expression)


State 94

   60 inclusive_OR_expression: exclusive_OR_expression .
   63 exclusive_OR_expression: exclusive_OR_expression . CARET AND_expression

    CARET  shift, and go to state 149

    $default  reduce using rule 60 (inclusive_OR_expression)


State 95

   62 exclusive_OR_expression: AND_expression .
   65 AND_expression: AND_expression . AMPERSAND equality_expression

    AMPERSAND  shift, and go to state 150

    $default  reduce using rule 62 (exclusive_OR_expression)


State 96

   64 AND_expression: equality_expression .
   67 equality_expression: equality_expression . EQUAL_EQUAL relational_expression
   68                    | equality_expression . NOT_EQUAL relational_expression

    EQUAL_EQUAL  shift, and go to state 151
    NOT_EQUAL    shift, and go to state 152

    $default  reduce using rule 64 (AND_expression)


State 97

   66 equality_expression: relational_expression .
   70 relational_expression: relational_expression . LESS_THAN shift_expression
   71                      | relational_expression . GREATER_THAN shift_expression
   72                      | relational_expression . LESS_THAN_EQUAL shift_expression
   73                      | relational_expression . GREATER_THAN_EQUAL shift_expression

    LESS_THAN           shift, and go to state 153
    GREATER_THAN        shift, and go to state 154
    LESS_THAN_EQUAL     shift, and go to state 155
    GREATER_THAN_EQUAL  shift, and go to state 156

    $default  reduce using rule 66 (equality_expression)


State 98

   69 relational_expression: shift_expression .
   75 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   76                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 69 (relational_expression)


State 99

   74 shift_expression: additive_expression .
   78 additive_expression: additive_expression . PLUS multiplicative_expression
   79                    | additive_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 159
    MINUS  shift, and go to state 160

    $default  reduce using rule 74 (shift_expression)


State 100

   77 additive_expression: multiplicative_expression .
   81 multiplicative_expression: multiplicative_expression . MULTIPLICATION cast_expression
   82                          | multiplicative_expression . FORWARD_SLASH cast_expression
   83                          | multiplicative_expression . PERCENTAGE cast_expression

    MULTIPLICATION  shift, and go to state 161
    FORWARD_SLASH   shift, and go to state 162
    PERCENTAGE      shift, and go to state 163

    $default  reduce using rule 77 (additive_expression)


State 101

   80 multiplicative_expression: cast_expression .

    $default  reduce using rule 80 (multiplicative_expression)


State 102

   95 unary_expression: unary_operator . cast_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    cast_expression     go to state 164
    unary_operator      go to state 102
    unary_expression    go to state 165
    postfix_expression  go to state 104
    primary_expression  go to state 105
    constant            go to state 106


State 103

   42 assignment_expression: unary_expression . assignment_operator assignment_expression
   84 cast_expression: unary_expression .

    EQUAL                 shift, and go to state 166
    MULTIPLICATION_EQUAL  shift, and go to state 167
    SLASH_EQUAL           shift, and go to state 168
    PERCENTAGE_EQUAL      shift, and go to state 169
    PLUS_EQUAL            shift, and go to state 170
    MINUS_EQUAL           shift, and go to state 171
    LEFT_SHIFT_EQUAL      shift, and go to state 172
    RIGHT_SHIFT_EQUAL     shift, and go to state 173
    BITWISE_AND_EQUAL     shift, and go to state 174
    BITWISE_NOT_EQUAL     shift, and go to state 175
    BITWISE_OR_EQUAL      shift, and go to state 176

    $default  reduce using rule 84 (cast_expression)

    assignment_operator  go to state 177


State 104

   92 unary_expression: postfix_expression .
  101 postfix_expression: postfix_expression . LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
  102                   | postfix_expression . LEFT_ROUND_BRACE RIGHT_ROUND_BRACE
  103                   | postfix_expression . LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
  104                   | postfix_expression . PERIOD IDENTIFIER
  105                   | postfix_expression . POINTS_TO IDENTIFIER
  106                   | postfix_expression . PLUS_PLUS
  107                   | postfix_expression . MINUS_MINUS

    LEFT_SQUARE_BRACE  shift, and go to state 178
    LEFT_ROUND_BRACE   shift, and go to state 179
    PERIOD             shift, and go to state 180
    POINTS_TO          shift, and go to state 181
    PLUS_PLUS          shift, and go to state 182
    MINUS_MINUS        shift, and go to state 183

    $default  reduce using rule 92 (unary_expression)


State 105

  100 postfix_expression: primary_expression .

    $default  reduce using rule 100 (postfix_expression)


State 106

  111 primary_expression: constant .

    $default  reduce using rule 111 (primary_expression)


State 107

  133 init_declarator: declarator EQUAL initializer .

    $default  reduce using rule 133 (init_declarator)


State 108

   10 compound_statement: LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
   11                   | LEFT_CURLY_BRACE . block_item_list RIGHT_CURLY_BRACE

    AUTO_KEYWORD          shift, and go to state 1
    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    EXTERN_KEYWORD        shift, and go to state 6
    FLOAT_KEYWORD         shift, and go to state 7
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    INLINE_KEYWORD        shift, and go to state 8
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    REGISTER_KEYWORD      shift, and go to state 11
    RESTRICT_KEYWORD      shift, and go to state 12
    RETURN_KEYWORD        shift, and go to state 192
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 73
    STATIC_KEYWORD        shift, and go to state 15
    SWITCH_KEYWORD        shift, and go to state 193
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    WHILE_KEYWORD         shift, and go to state 194
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    RIGHT_CURLY_BRACE     shift, and go to state 196
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 198
    labeled_statement          go to state 199
    compound_statement         go to state 200
    block_item_list            go to state 201
    block_item                 go to state 202
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    declaration                go to state 208
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31


State 109

   34 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 34 (function_definition)


State 110

   37 declaration_list: declaration_list declaration .

    $default  reduce using rule 37 (declaration_list)


State 111

   35 function_definition: declaration_specifiers declarator F compound_statement .

    $default  reduce using rule 35 (function_definition)


State 112

  176 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD . type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE
  177                  | direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD . assignment_expression RIGHT_SQUARE_BRACE

    CONST_KEYWORD      shift, and go to state 3
    RESTRICT_KEYWORD   shift, and go to state 12
    SIZEOF_KEYWORD     shift, and go to state 73
    VOLATILE_KEYWORD   shift, and go to state 18
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 209
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    type_qualifier             go to state 51
    type_qualifier_list        go to state 210


State 113

  175 direct_declarator: direct_declarator LEFT_SQUARE_BRACE RIGHT_SQUARE_BRACE .

    $default  reduce using rule 175 (direct_declarator)


State 114

   87 unary_operator: MULTIPLICATION .
  180 direct_declarator: direct_declarator LEFT_SQUARE_BRACE MULTIPLICATION . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 211

    $default  reduce using rule 87 (unary_operator)


State 115

  173 direct_declarator: direct_declarator LEFT_SQUARE_BRACE assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 212


State 116

  172 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list . assignment_expression RIGHT_SQUARE_BRACE
  174                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list . RIGHT_SQUARE_BRACE
  178                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list . STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE
  179                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list . MULTIPLICATION RIGHT_SQUARE_BRACE
  189 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_KEYWORD       shift, and go to state 3
    RESTRICT_KEYWORD    shift, and go to state 12
    SIZEOF_KEYWORD      shift, and go to state 73
    STATIC_KEYWORD      shift, and go to state 213
    VOLATILE_KEYWORD    shift, and go to state 18
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHAR_CONSTANT       shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    RIGHT_SQUARE_BRACE  shift, and go to state 214
    LEFT_ROUND_BRACE    shift, and go to state 79
    PLUS_PLUS           shift, and go to state 81
    MINUS_MINUS         shift, and go to state 82
    AMPERSAND           shift, and go to state 83
    MULTIPLICATION      shift, and go to state 215
    PLUS                shift, and go to state 85
    MINUS               shift, and go to state 86
    TILDE               shift, and go to state 87
    EXCLIMATION         shift, and go to state 88

    assignment_expression      go to state 216
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    type_qualifier             go to state 69


State 117

  196 identifier_list: IDENTIFIER .

    $default  reduce using rule 196 (identifier_list)


State 118

  183 direct_declarator: direct_declarator LEFT_ROUND_BRACE RIGHT_ROUND_BRACE .

    $default  reduce using rule 183 (direct_declarator)


State 119

  194 parameter_declaration: declaration_specifiers . declarator
  195                      | declaration_specifiers .

    IDENTIFIER        shift, and go to state 36
    LEFT_ROUND_BRACE  shift, and go to state 37
    MULTIPLICATION    shift, and go to state 38

    $default  reduce using rule 195 (parameter_declaration)

    declarator         go to state 217
    direct_declarator  go to state 43
    pointer            go to state 44


State 120

  181 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 218


State 121

  190 parameter_type_list: parameter_list .
  191                    | parameter_list . COMMA ELIPSES
  193 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 219

    $default  reduce using rule 190 (parameter_type_list)


State 122

  192 parameter_list: parameter_declaration .

    $default  reduce using rule 192 (parameter_list)


State 123

  182 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_list . RIGHT_ROUND_BRACE
  197 identifier_list: identifier_list . COMMA IDENTIFIER

    RIGHT_ROUND_BRACE  shift, and go to state 220
    COMMA              shift, and go to state 221


State 124

  163 enumerator: enumeration_constant EQUAL . constant_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    constant_expression        go to state 222
    conditional_expression     go to state 223
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 125

  155 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 155 (enum_specifier)


State 126

  156 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA . RIGHT_CURLY_BRACE
  161 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER         shift, and go to state 64
    RIGHT_CURLY_BRACE  shift, and go to state 224

    enumeration_constant  go to state 65
    enumerator            go to state 225


State 127

   97 unary_expression: SIZEOF_KEYWORD LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE
  108 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
  113 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE

    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    FLOAT_KEYWORD       shift, and go to state 7
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    SIZEOF_KEYWORD      shift, and go to state 73
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHAR_CONSTANT       shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    LEFT_ROUND_BRACE    shift, and go to state 79
    PLUS_PLUS           shift, and go to state 81
    MINUS_MINUS         shift, and go to state 82
    AMPERSAND           shift, and go to state 83
    MULTIPLICATION      shift, and go to state 84
    PLUS                shift, and go to state 85
    MINUS               shift, and go to state 86
    TILDE               shift, and go to state 87
    EXCLIMATION         shift, and go to state 88

    expression                 go to state 129
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    type_specifier             go to state 131
    specifier_qualifier_list   go to state 132
    enum_specifier             go to state 29
    type_qualifier             go to state 133
    type_name                  go to state 226


State 128

   96 unary_expression: SIZEOF_KEYWORD unary_expression .

    $default  reduce using rule 96 (unary_expression)


State 129

   39 expression: expression . COMMA assignment_expression
  113 primary_expression: LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 227
    COMMA              shift, and go to state 228


State 130

   38 expression: assignment_expression .

    $default  reduce using rule 38 (expression)


State 131

  151 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  152                         | type_specifier .

    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    FLOAT_KEYWORD       shift, and go to state 7
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 152 (specifier_qualifier_list)

    type_specifier            go to state 131
    specifier_qualifier_list  go to state 229
    enum_specifier            go to state 29
    type_qualifier            go to state 133


State 132

  198 type_name: specifier_qualifier_list .

    $default  reduce using rule 198 (type_name)


State 133

  153 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  154                         | type_qualifier .

    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    FLOAT_KEYWORD       shift, and go to state 7
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21

    $default  reduce using rule 154 (specifier_qualifier_list)

    type_specifier            go to state 131
    specifier_qualifier_list  go to state 230
    enum_specifier            go to state 29
    type_qualifier            go to state 133


State 134

   85 cast_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE cast_expression
  108 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 231


State 135

  209 designator: LEFT_SQUARE_BRACE . constant_expression RIGHT_SQUARE_BRACE

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    constant_expression        go to state 232
    conditional_expression     go to state 223
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 136

  210 designator: PERIOD . IDENTIFIER

    IDENTIFIER  shift, and go to state 233


State 137

  200 initializer: LEFT_CURLY_BRACE initializer_list . RIGHT_CURLY_BRACE
  201            | LEFT_CURLY_BRACE initializer_list . COMMA RIGHT_CURLY_BRACE
  203 initializer_list: initializer_list . COMMA designation_opt initializer

    RIGHT_CURLY_BRACE  shift, and go to state 234
    COMMA              shift, and go to state 235


State 138

  202 initializer_list: designation_opt . initializer

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    LEFT_CURLY_BRACE   shift, and go to state 80
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 89
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    initializer                go to state 236


State 139

  204 designation_opt: designation .

    $default  reduce using rule 204 (designation_opt)


State 140

  206 designation: designator_list . EQUAL
  208 designator_list: designator_list . designator

    LEFT_SQUARE_BRACE  shift, and go to state 135
    PERIOD             shift, and go to state 136
    EQUAL              shift, and go to state 237

    designator  go to state 238


State 141

  207 designator_list: designator .

    $default  reduce using rule 207 (designator_list)


State 142

  108 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
  113 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE

    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    FLOAT_KEYWORD       shift, and go to state 7
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    SIZEOF_KEYWORD      shift, and go to state 73
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    IDENTIFIER          shift, and go to state 74
    INTEGER_CONSTANT    shift, and go to state 75
    FLOATING_CONSTANT   shift, and go to state 76
    CHAR_CONSTANT       shift, and go to state 77
    STRING_LITERAL      shift, and go to state 78
    LEFT_ROUND_BRACE    shift, and go to state 79
    PLUS_PLUS           shift, and go to state 81
    MINUS_MINUS         shift, and go to state 82
    AMPERSAND           shift, and go to state 83
    MULTIPLICATION      shift, and go to state 84
    PLUS                shift, and go to state 85
    MINUS               shift, and go to state 86
    TILDE               shift, and go to state 87
    EXCLIMATION         shift, and go to state 88

    expression                 go to state 129
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    type_specifier             go to state 131
    specifier_qualifier_list   go to state 132
    enum_specifier             go to state 29
    type_qualifier             go to state 133
    type_name                  go to state 239


State 143

   93 unary_expression: PLUS_PLUS unary_expression .

    $default  reduce using rule 93 (unary_expression)


State 144

   94 unary_expression: MINUS_MINUS unary_expression .

    $default  reduce using rule 94 (unary_expression)


State 145

   57 logical_OR_expression: logical_OR_expression LOGICAL_OR . M logical_AND_expression

    $default  reduce using rule 118 (M)

    M  go to state 240


State 146

   55 conditional_expression: logical_OR_expression N . QUESTION_MARK M expression N COLON M conditional_expression

    QUESTION_MARK  shift, and go to state 241


State 147

   59 logical_AND_expression: logical_AND_expression LOGICAL_AND . M inclusive_OR_expression

    $default  reduce using rule 118 (M)

    M  go to state 242


State 148

   61 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    exclusive_OR_expression    go to state 243
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 149

   63 exclusive_OR_expression: exclusive_OR_expression CARET . AND_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    AND_expression             go to state 244
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 150

   65 AND_expression: AND_expression AMPERSAND . equality_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    equality_expression        go to state 245
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 151

   67 equality_expression: equality_expression EQUAL_EQUAL . relational_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    relational_expression      go to state 246
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 152

   68 equality_expression: equality_expression NOT_EQUAL . relational_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    relational_expression      go to state 247
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 153

   70 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    shift_expression           go to state 248
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 154

   71 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    shift_expression           go to state 249
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 155

   72 relational_expression: relational_expression LESS_THAN_EQUAL . shift_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    shift_expression           go to state 250
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 156

   73 relational_expression: relational_expression GREATER_THAN_EQUAL . shift_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    shift_expression           go to state 251
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 157

   75 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    additive_expression        go to state 252
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 158

   76 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    additive_expression        go to state 253
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 159

   78 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    multiplicative_expression  go to state 254
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 160

   79 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    multiplicative_expression  go to state 255
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 161

   81 multiplicative_expression: multiplicative_expression MULTIPLICATION . cast_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    cast_expression     go to state 256
    unary_operator      go to state 102
    unary_expression    go to state 165
    postfix_expression  go to state 104
    primary_expression  go to state 105
    constant            go to state 106


State 162

   82 multiplicative_expression: multiplicative_expression FORWARD_SLASH . cast_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    cast_expression     go to state 257
    unary_operator      go to state 102
    unary_expression    go to state 165
    postfix_expression  go to state 104
    primary_expression  go to state 105
    constant            go to state 106


State 163

   83 multiplicative_expression: multiplicative_expression PERCENTAGE . cast_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    cast_expression     go to state 258
    unary_operator      go to state 102
    unary_expression    go to state 165
    postfix_expression  go to state 104
    primary_expression  go to state 105
    constant            go to state 106


State 164

   95 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 95 (unary_expression)


State 165

   84 cast_expression: unary_expression .

    $default  reduce using rule 84 (cast_expression)


State 166

   43 assignment_operator: EQUAL .

    $default  reduce using rule 43 (assignment_operator)


State 167

   44 assignment_operator: MULTIPLICATION_EQUAL .

    $default  reduce using rule 44 (assignment_operator)


State 168

   45 assignment_operator: SLASH_EQUAL .

    $default  reduce using rule 45 (assignment_operator)


State 169

   46 assignment_operator: PERCENTAGE_EQUAL .

    $default  reduce using rule 46 (assignment_operator)


State 170

   47 assignment_operator: PLUS_EQUAL .

    $default  reduce using rule 47 (assignment_operator)


State 171

   48 assignment_operator: MINUS_EQUAL .

    $default  reduce using rule 48 (assignment_operator)


State 172

   49 assignment_operator: LEFT_SHIFT_EQUAL .

    $default  reduce using rule 49 (assignment_operator)


State 173

   50 assignment_operator: RIGHT_SHIFT_EQUAL .

    $default  reduce using rule 50 (assignment_operator)


State 174

   51 assignment_operator: BITWISE_AND_EQUAL .

    $default  reduce using rule 51 (assignment_operator)


State 175

   52 assignment_operator: BITWISE_NOT_EQUAL .

    $default  reduce using rule 52 (assignment_operator)


State 176

   53 assignment_operator: BITWISE_OR_EQUAL .

    $default  reduce using rule 53 (assignment_operator)


State 177

   42 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 259
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 178

  101 postfix_expression: postfix_expression LEFT_SQUARE_BRACE . expression RIGHT_SQUARE_BRACE

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    expression                 go to state 260
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 179

  102 postfix_expression: postfix_expression LEFT_ROUND_BRACE . RIGHT_ROUND_BRACE
  103                   | postfix_expression LEFT_ROUND_BRACE . argument_expression_list RIGHT_ROUND_BRACE

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    RIGHT_ROUND_BRACE  shift, and go to state 261
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 262
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    argument_expression_list   go to state 263
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 180

  104 postfix_expression: postfix_expression PERIOD . IDENTIFIER

    IDENTIFIER  shift, and go to state 264


State 181

  105 postfix_expression: postfix_expression POINTS_TO . IDENTIFIER

    IDENTIFIER  shift, and go to state 265


State 182

  106 postfix_expression: postfix_expression PLUS_PLUS .

    $default  reduce using rule 106 (postfix_expression)


State 183

  107 postfix_expression: postfix_expression MINUS_MINUS .

    $default  reduce using rule 107 (postfix_expression)


State 184

   27 jump_statement: BREAK_KEYWORD . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 266


State 185

    8 labeled_statement: CASE_KEYWORD . constant_expression COLON statement

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    constant_expression        go to state 267
    conditional_expression     go to state 223
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 186

   26 jump_statement: CONTINUE_KEYWORD . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 268


State 187

    9 labeled_statement: DEFAULT_KEYWORD . COLON statement

    COLON  shift, and go to state 269


State 188

   22 iteration_statement: DO_KEYWORD . M statement M WHILE_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    $default  reduce using rule 118 (M)

    M  go to state 270


State 189

   23 iteration_statement: FOR_KEYWORD . LEFT_ROUND_BRACE expression_statement M expression_statement N M expression N RIGHT_ROUND_BRACE M statement
   24                    | FOR_KEYWORD . LEFT_ROUND_BRACE declaration expression_statement expression_statement RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 271


State 190

   25 jump_statement: GOTO_KEYWORD . IDENTIFIER SEMICOLON_TERMINATOR

    IDENTIFIER  shift, and go to state 272


State 191

   18 selection_statement: IF_KEYWORD . LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N
   19                    | IF_KEYWORD . LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE_KEYWORD M statement

    LEFT_ROUND_BRACE  shift, and go to state 273


State 192

   28 jump_statement: RETURN_KEYWORD . SEMICOLON_TERMINATOR
   29               | RETURN_KEYWORD . expression SEMICOLON_TERMINATOR

    SIZEOF_KEYWORD        shift, and go to state 73
    IDENTIFIER            shift, and go to state 74
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 274

    expression                 go to state 275
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 193

   20 selection_statement: SWITCH_KEYWORD . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 276


State 194

   21 iteration_statement: WHILE_KEYWORD . M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 118 (M)

    M  go to state 277


State 195

    7 labeled_statement: IDENTIFIER . COLON statement
  110 primary_expression: IDENTIFIER .

    COLON  shift, and go to state 278

    $default  reduce using rule 110 (primary_expression)


State 196

   10 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 10 (compound_statement)


State 197

   16 expression_statement: SEMICOLON_TERMINATOR .

    $default  reduce using rule 16 (expression_statement)


State 198

   15 block_item: statement .

    $default  reduce using rule 15 (block_item)


State 199

    1 statement: labeled_statement .

    $default  reduce using rule 1 (statement)


State 200

    2 statement: compound_statement .

    $default  reduce using rule 2 (statement)


State 201

   11 compound_statement: LEFT_CURLY_BRACE block_item_list . RIGHT_CURLY_BRACE
   13 block_item_list: block_item_list . M block_item

    RIGHT_CURLY_BRACE  shift, and go to state 279

    $default  reduce using rule 118 (M)

    M  go to state 280


State 202

   12 block_item_list: block_item .

    $default  reduce using rule 12 (block_item_list)


State 203

    3 statement: expression_statement .

    $default  reduce using rule 3 (statement)


State 204

    4 statement: selection_statement .

    $default  reduce using rule 4 (statement)


State 205

    5 statement: iteration_statement .

    $default  reduce using rule 5 (statement)


State 206

    6 statement: jump_statement .

    $default  reduce using rule 6 (statement)


State 207

   17 expression_statement: expression . SEMICOLON_TERMINATOR
   39 expression: expression . COMMA assignment_expression

    SEMICOLON_TERMINATOR  shift, and go to state 281
    COMMA                 shift, and go to state 228


State 208

   14 block_item: declaration .

    $default  reduce using rule 14 (block_item)


State 209

  177 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 282


State 210

  176 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list . assignment_expression RIGHT_SQUARE_BRACE
  189 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_KEYWORD      shift, and go to state 3
    RESTRICT_KEYWORD   shift, and go to state 12
    SIZEOF_KEYWORD     shift, and go to state 73
    VOLATILE_KEYWORD   shift, and go to state 18
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 283
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    type_qualifier             go to state 69


State 211

  180 direct_declarator: direct_declarator LEFT_SQUARE_BRACE MULTIPLICATION RIGHT_SQUARE_BRACE .

    $default  reduce using rule 180 (direct_declarator)


State 212

  173 direct_declarator: direct_declarator LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 173 (direct_declarator)


State 213

  178 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD . assignment_expression RIGHT_SQUARE_BRACE

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 284
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 214

  174 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list RIGHT_SQUARE_BRACE .

    $default  reduce using rule 174 (direct_declarator)


State 215

   87 unary_operator: MULTIPLICATION .
  179 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list MULTIPLICATION . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 285

    $default  reduce using rule 87 (unary_operator)


State 216

  172 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 286


State 217

  194 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 194 (parameter_declaration)


State 218

  181 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 181 (direct_declarator)


State 219

  191 parameter_type_list: parameter_list COMMA . ELIPSES
  193 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO_KEYWORD        shift, and go to state 1
    CHAR_KEYWORD        shift, and go to state 2
    CONST_KEYWORD       shift, and go to state 3
    DOUBLE_KEYWORD      shift, and go to state 4
    ENUM_KEYWORD        shift, and go to state 5
    EXTERN_KEYWORD      shift, and go to state 6
    FLOAT_KEYWORD       shift, and go to state 7
    INLINE_KEYWORD      shift, and go to state 8
    INT_KEYWORD         shift, and go to state 9
    LONG_KEYWORD        shift, and go to state 10
    REGISTER_KEYWORD    shift, and go to state 11
    RESTRICT_KEYWORD    shift, and go to state 12
    SHORT_KEYWORD       shift, and go to state 13
    SIGNED_KEYWORD      shift, and go to state 14
    STATIC_KEYWORD      shift, and go to state 15
    UNSIGNED_KEYWORD    shift, and go to state 16
    VOID_KEYWORD        shift, and go to state 17
    VOLATILE_KEYWORD    shift, and go to state 18
    _BOOL_KEYWORD       shift, and go to state 19
    _COMPLEX_KEYWORD    shift, and go to state 20
    _IMAGINARY_KEYWORD  shift, and go to state 21
    ELIPSES             shift, and go to state 287

    declaration_specifiers   go to state 119
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_declaration    go to state 288


State 220

  182 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 182 (direct_declarator)


State 221

  197 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 289


State 222

  163 enumerator: enumeration_constant EQUAL constant_expression .

    $default  reduce using rule 163 (enumerator)


State 223

   40 constant_expression: conditional_expression .

    $default  reduce using rule 40 (constant_expression)


State 224

  156 enum_specifier: ENUM_KEYWORD identifier_opt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 156 (enum_specifier)


State 225

  161 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 161 (enumerator_list)


State 226

   97 unary_expression: SIZEOF_KEYWORD LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE
  108 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 290


State 227

  113 primary_expression: LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE .

    $default  reduce using rule 113 (primary_expression)


State 228

   39 expression: expression COMMA . assignment_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 291
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 229

  151 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 151 (specifier_qualifier_list)


State 230

  153 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 153 (specifier_qualifier_list)


State 231

   85 cast_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . cast_expression
  108 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    LEFT_CURLY_BRACE   shift, and go to state 292
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    cast_expression     go to state 293
    unary_operator      go to state 102
    unary_expression    go to state 165
    postfix_expression  go to state 104
    primary_expression  go to state 105
    constant            go to state 106


State 232

  209 designator: LEFT_SQUARE_BRACE constant_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 294


State 233

  210 designator: PERIOD IDENTIFIER .

    $default  reduce using rule 210 (designator)


State 234

  200 initializer: LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 200 (initializer)


State 235

  201 initializer: LEFT_CURLY_BRACE initializer_list COMMA . RIGHT_CURLY_BRACE
  203 initializer_list: initializer_list COMMA . designation_opt initializer

    LEFT_SQUARE_BRACE  shift, and go to state 135
    RIGHT_CURLY_BRACE  shift, and go to state 295
    PERIOD             shift, and go to state 136

    $default  reduce using rule 205 (designation_opt)

    designation_opt  go to state 296
    designation      go to state 139
    designator_list  go to state 140
    designator       go to state 141


State 236

  202 initializer_list: designation_opt initializer .

    $default  reduce using rule 202 (initializer_list)


State 237

  206 designation: designator_list EQUAL .

    $default  reduce using rule 206 (designation)


State 238

  208 designator_list: designator_list designator .

    $default  reduce using rule 208 (designator_list)


State 239

  108 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 297


State 240

   57 logical_OR_expression: logical_OR_expression LOGICAL_OR M . logical_AND_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    logical_AND_expression     go to state 298
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 241

   55 conditional_expression: logical_OR_expression N QUESTION_MARK . M expression N COLON M conditional_expression

    $default  reduce using rule 118 (M)

    M  go to state 299


State 242

   59 logical_AND_expression: logical_AND_expression LOGICAL_AND M . inclusive_OR_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    inclusive_OR_expression    go to state 300
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 243

   61 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .
   63 exclusive_OR_expression: exclusive_OR_expression . CARET AND_expression

    CARET  shift, and go to state 149

    $default  reduce using rule 61 (inclusive_OR_expression)


State 244

   63 exclusive_OR_expression: exclusive_OR_expression CARET AND_expression .
   65 AND_expression: AND_expression . AMPERSAND equality_expression

    AMPERSAND  shift, and go to state 150

    $default  reduce using rule 63 (exclusive_OR_expression)


State 245

   65 AND_expression: AND_expression AMPERSAND equality_expression .
   67 equality_expression: equality_expression . EQUAL_EQUAL relational_expression
   68                    | equality_expression . NOT_EQUAL relational_expression

    EQUAL_EQUAL  shift, and go to state 151
    NOT_EQUAL    shift, and go to state 152

    $default  reduce using rule 65 (AND_expression)


State 246

   67 equality_expression: equality_expression EQUAL_EQUAL relational_expression .
   70 relational_expression: relational_expression . LESS_THAN shift_expression
   71                      | relational_expression . GREATER_THAN shift_expression
   72                      | relational_expression . LESS_THAN_EQUAL shift_expression
   73                      | relational_expression . GREATER_THAN_EQUAL shift_expression

    LESS_THAN           shift, and go to state 153
    GREATER_THAN        shift, and go to state 154
    LESS_THAN_EQUAL     shift, and go to state 155
    GREATER_THAN_EQUAL  shift, and go to state 156

    $default  reduce using rule 67 (equality_expression)


State 247

   68 equality_expression: equality_expression NOT_EQUAL relational_expression .
   70 relational_expression: relational_expression . LESS_THAN shift_expression
   71                      | relational_expression . GREATER_THAN shift_expression
   72                      | relational_expression . LESS_THAN_EQUAL shift_expression
   73                      | relational_expression . GREATER_THAN_EQUAL shift_expression

    LESS_THAN           shift, and go to state 153
    GREATER_THAN        shift, and go to state 154
    LESS_THAN_EQUAL     shift, and go to state 155
    GREATER_THAN_EQUAL  shift, and go to state 156

    $default  reduce using rule 68 (equality_expression)


State 248

   70 relational_expression: relational_expression LESS_THAN shift_expression .
   75 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   76                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 70 (relational_expression)


State 249

   71 relational_expression: relational_expression GREATER_THAN shift_expression .
   75 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   76                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 71 (relational_expression)


State 250

   72 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression .
   75 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   76                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 72 (relational_expression)


State 251

   73 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression .
   75 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   76                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 157
    RIGHT_SHIFT  shift, and go to state 158

    $default  reduce using rule 73 (relational_expression)


State 252

   75 shift_expression: shift_expression LEFT_SHIFT additive_expression .
   78 additive_expression: additive_expression . PLUS multiplicative_expression
   79                    | additive_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 159
    MINUS  shift, and go to state 160

    $default  reduce using rule 75 (shift_expression)


State 253

   76 shift_expression: shift_expression RIGHT_SHIFT additive_expression .
   78 additive_expression: additive_expression . PLUS multiplicative_expression
   79                    | additive_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 159
    MINUS  shift, and go to state 160

    $default  reduce using rule 76 (shift_expression)


State 254

   78 additive_expression: additive_expression PLUS multiplicative_expression .
   81 multiplicative_expression: multiplicative_expression . MULTIPLICATION cast_expression
   82                          | multiplicative_expression . FORWARD_SLASH cast_expression
   83                          | multiplicative_expression . PERCENTAGE cast_expression

    MULTIPLICATION  shift, and go to state 161
    FORWARD_SLASH   shift, and go to state 162
    PERCENTAGE      shift, and go to state 163

    $default  reduce using rule 78 (additive_expression)


State 255

   79 additive_expression: additive_expression MINUS multiplicative_expression .
   81 multiplicative_expression: multiplicative_expression . MULTIPLICATION cast_expression
   82                          | multiplicative_expression . FORWARD_SLASH cast_expression
   83                          | multiplicative_expression . PERCENTAGE cast_expression

    MULTIPLICATION  shift, and go to state 161
    FORWARD_SLASH   shift, and go to state 162
    PERCENTAGE      shift, and go to state 163

    $default  reduce using rule 79 (additive_expression)


State 256

   81 multiplicative_expression: multiplicative_expression MULTIPLICATION cast_expression .

    $default  reduce using rule 81 (multiplicative_expression)


State 257

   82 multiplicative_expression: multiplicative_expression FORWARD_SLASH cast_expression .

    $default  reduce using rule 82 (multiplicative_expression)


State 258

   83 multiplicative_expression: multiplicative_expression PERCENTAGE cast_expression .

    $default  reduce using rule 83 (multiplicative_expression)


State 259

   42 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 42 (assignment_expression)


State 260

   39 expression: expression . COMMA assignment_expression
  101 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 301
    COMMA               shift, and go to state 228


State 261

  102 postfix_expression: postfix_expression LEFT_ROUND_BRACE RIGHT_ROUND_BRACE .

    $default  reduce using rule 102 (postfix_expression)


State 262

   98 argument_expression_list: assignment_expression .

    $default  reduce using rule 98 (argument_expression_list)


State 263

   99 argument_expression_list: argument_expression_list . COMMA assignment_expression
  103 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_list . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 302
    COMMA              shift, and go to state 303


State 264

  104 postfix_expression: postfix_expression PERIOD IDENTIFIER .

    $default  reduce using rule 104 (postfix_expression)


State 265

  105 postfix_expression: postfix_expression POINTS_TO IDENTIFIER .

    $default  reduce using rule 105 (postfix_expression)


State 266

   27 jump_statement: BREAK_KEYWORD SEMICOLON_TERMINATOR .

    $default  reduce using rule 27 (jump_statement)


State 267

    8 labeled_statement: CASE_KEYWORD constant_expression . COLON statement

    COLON  shift, and go to state 304


State 268

   26 jump_statement: CONTINUE_KEYWORD SEMICOLON_TERMINATOR .

    $default  reduce using rule 26 (jump_statement)


State 269

    9 labeled_statement: DEFAULT_KEYWORD COLON . statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 305
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 270

   22 iteration_statement: DO_KEYWORD M . statement M WHILE_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 306
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 271

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE . expression_statement M expression_statement N M expression N RIGHT_ROUND_BRACE M statement
   24                    | FOR_KEYWORD LEFT_ROUND_BRACE . declaration expression_statement expression_statement RIGHT_ROUND_BRACE statement

    AUTO_KEYWORD          shift, and go to state 1
    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    EXTERN_KEYWORD        shift, and go to state 6
    FLOAT_KEYWORD         shift, and go to state 7
    INLINE_KEYWORD        shift, and go to state 8
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    REGISTER_KEYWORD      shift, and go to state 11
    RESTRICT_KEYWORD      shift, and go to state 12
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 73
    STATIC_KEYWORD        shift, and go to state 15
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 74
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    expression_statement       go to state 307
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    declaration                go to state 308
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31


State 272

   25 jump_statement: GOTO_KEYWORD IDENTIFIER . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 309


State 273

   18 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE . expression N RIGHT_ROUND_BRACE M statement N
   19                    | IF_KEYWORD LEFT_ROUND_BRACE . expression N RIGHT_ROUND_BRACE M statement N ELSE_KEYWORD M statement

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    expression                 go to state 310
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 274

   28 jump_statement: RETURN_KEYWORD SEMICOLON_TERMINATOR .

    $default  reduce using rule 28 (jump_statement)


State 275

   29 jump_statement: RETURN_KEYWORD expression . SEMICOLON_TERMINATOR
   39 expression: expression . COMMA assignment_expression

    SEMICOLON_TERMINATOR  shift, and go to state 311
    COMMA                 shift, and go to state 228


State 276

   20 selection_statement: SWITCH_KEYWORD LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    expression                 go to state 312
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 277

   21 iteration_statement: WHILE_KEYWORD M . LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement

    LEFT_ROUND_BRACE  shift, and go to state 313


State 278

    7 labeled_statement: IDENTIFIER COLON . statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 314
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 279

   11 compound_statement: LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 11 (compound_statement)


State 280

   13 block_item_list: block_item_list M . block_item

    AUTO_KEYWORD          shift, and go to state 1
    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CHAR_KEYWORD          shift, and go to state 2
    CONST_KEYWORD         shift, and go to state 3
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    DOUBLE_KEYWORD        shift, and go to state 4
    ENUM_KEYWORD          shift, and go to state 5
    EXTERN_KEYWORD        shift, and go to state 6
    FLOAT_KEYWORD         shift, and go to state 7
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    INLINE_KEYWORD        shift, and go to state 8
    INT_KEYWORD           shift, and go to state 9
    LONG_KEYWORD          shift, and go to state 10
    REGISTER_KEYWORD      shift, and go to state 11
    RESTRICT_KEYWORD      shift, and go to state 12
    RETURN_KEYWORD        shift, and go to state 192
    SHORT_KEYWORD         shift, and go to state 13
    SIGNED_KEYWORD        shift, and go to state 14
    SIZEOF_KEYWORD        shift, and go to state 73
    STATIC_KEYWORD        shift, and go to state 15
    SWITCH_KEYWORD        shift, and go to state 193
    UNSIGNED_KEYWORD      shift, and go to state 16
    VOID_KEYWORD          shift, and go to state 17
    VOLATILE_KEYWORD      shift, and go to state 18
    WHILE_KEYWORD         shift, and go to state 194
    _BOOL_KEYWORD         shift, and go to state 19
    _COMPLEX_KEYWORD      shift, and go to state 20
    _IMAGINARY_KEYWORD    shift, and go to state 21
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 198
    labeled_statement          go to state 199
    compound_statement         go to state 200
    block_item                 go to state 315
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    declaration                go to state 208
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31


State 281

   17 expression_statement: expression SEMICOLON_TERMINATOR .

    $default  reduce using rule 17 (expression_statement)


State 282

  177 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 177 (direct_declarator)


State 283

  176 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 316


State 284

  178 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 317


State 285

  179 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list MULTIPLICATION RIGHT_SQUARE_BRACE .

    $default  reduce using rule 179 (direct_declarator)


State 286

  172 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 172 (direct_declarator)


State 287

  191 parameter_type_list: parameter_list COMMA ELIPSES .

    $default  reduce using rule 191 (parameter_type_list)


State 288

  193 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 193 (parameter_list)


State 289

  197 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 197 (identifier_list)


State 290

   97 unary_expression: SIZEOF_KEYWORD LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE .
  108 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 292

    $default  reduce using rule 97 (unary_expression)


State 291

   39 expression: expression COMMA assignment_expression .

    $default  reduce using rule 39 (expression)


State 292

  108 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE . initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE . initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 135
    PERIOD             shift, and go to state 136

    $default  reduce using rule 205 (designation_opt)

    initializer_list  go to state 318
    designation_opt   go to state 138
    designation       go to state 139
    designator_list   go to state 140
    designator        go to state 141


State 293

   85 cast_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE cast_expression .

    $default  reduce using rule 85 (cast_expression)


State 294

  209 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 209 (designator)


State 295

  201 initializer: LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 201 (initializer)


State 296

  203 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    LEFT_CURLY_BRACE   shift, and go to state 80
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 89
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106
    initializer                go to state 319


State 297

  108 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 292


State 298

   57 logical_OR_expression: logical_OR_expression LOGICAL_OR M logical_AND_expression .
   59 logical_AND_expression: logical_AND_expression . LOGICAL_AND M inclusive_OR_expression

    LOGICAL_AND  shift, and go to state 147

    $default  reduce using rule 57 (logical_OR_expression)


State 299

   55 conditional_expression: logical_OR_expression N QUESTION_MARK M . expression N COLON M conditional_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    expression                 go to state 320
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 300

   59 logical_AND_expression: logical_AND_expression LOGICAL_AND M inclusive_OR_expression .
   61 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression

    BITWISE_OR  shift, and go to state 148

    $default  reduce using rule 59 (logical_AND_expression)


State 301

  101 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 101 (postfix_expression)


State 302

  103 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 103 (postfix_expression)


State 303

   99 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    assignment_expression      go to state 321
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 304

    8 labeled_statement: CASE_KEYWORD constant_expression COLON . statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 322
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 305

    9 labeled_statement: DEFAULT_KEYWORD COLON statement .

    $default  reduce using rule 9 (labeled_statement)


State 306

   22 iteration_statement: DO_KEYWORD M statement . M WHILE_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    $default  reduce using rule 118 (M)

    M  go to state 323


State 307

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement . M expression_statement N M expression N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 118 (M)

    M  go to state 324


State 308

   24 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration . expression_statement expression_statement RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 73
    IDENTIFIER            shift, and go to state 74
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    expression_statement       go to state 325
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 309

   25 jump_statement: GOTO_KEYWORD IDENTIFIER SEMICOLON_TERMINATOR .

    $default  reduce using rule 25 (jump_statement)


State 310

   18 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression . N RIGHT_ROUND_BRACE M statement N
   19                    | IF_KEYWORD LEFT_ROUND_BRACE expression . N RIGHT_ROUND_BRACE M statement N ELSE_KEYWORD M statement
   39 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 228

    $default  reduce using rule 119 (N)

    N  go to state 326


State 311

   29 jump_statement: RETURN_KEYWORD expression SEMICOLON_TERMINATOR .

    $default  reduce using rule 29 (jump_statement)


State 312

   20 selection_statement: SWITCH_KEYWORD LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement
   39 expression: expression . COMMA assignment_expression

    RIGHT_ROUND_BRACE  shift, and go to state 327
    COMMA              shift, and go to state 228


State 313

   21 iteration_statement: WHILE_KEYWORD M LEFT_ROUND_BRACE . expression N RIGHT_ROUND_BRACE M statement

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    expression                 go to state 328
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 314

    7 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 7 (labeled_statement)


State 315

   13 block_item_list: block_item_list M block_item .

    $default  reduce using rule 13 (block_item_list)


State 316

  176 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC_KEYWORD type_qualifier_list assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 176 (direct_declarator)


State 317

  178 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC_KEYWORD assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 178 (direct_declarator)


State 318

  108 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list . RIGHT_CURLY_BRACE
  109                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list . COMMA RIGHT_CURLY_BRACE
  203 initializer_list: initializer_list . COMMA designation_opt initializer

    RIGHT_CURLY_BRACE  shift, and go to state 329
    COMMA              shift, and go to state 330


State 319

  203 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 203 (initializer_list)


State 320

   39 expression: expression . COMMA assignment_expression
   55 conditional_expression: logical_OR_expression N QUESTION_MARK M expression . N COLON M conditional_expression

    COMMA  shift, and go to state 228

    $default  reduce using rule 119 (N)

    N  go to state 331


State 321

   99 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 99 (argument_expression_list)


State 322

    8 labeled_statement: CASE_KEYWORD constant_expression COLON statement .

    $default  reduce using rule 8 (labeled_statement)


State 323

   22 iteration_statement: DO_KEYWORD M statement M . WHILE_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    WHILE_KEYWORD  shift, and go to state 332


State 324

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M . expression_statement N M expression N RIGHT_ROUND_BRACE M statement

    SIZEOF_KEYWORD        shift, and go to state 73
    IDENTIFIER            shift, and go to state 74
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    expression_statement       go to state 333
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 325

   24 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_statement . expression_statement RIGHT_ROUND_BRACE statement

    SIZEOF_KEYWORD        shift, and go to state 73
    IDENTIFIER            shift, and go to state 74
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    expression_statement       go to state 334
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 326

   18 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N . RIGHT_ROUND_BRACE M statement N
   19                    | IF_KEYWORD LEFT_ROUND_BRACE expression N . RIGHT_ROUND_BRACE M statement N ELSE_KEYWORD M statement

    RIGHT_ROUND_BRACE  shift, and go to state 335


State 327

   20 selection_statement: SWITCH_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 336
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 328

   21 iteration_statement: WHILE_KEYWORD M LEFT_ROUND_BRACE expression . N RIGHT_ROUND_BRACE M statement
   39 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 228

    $default  reduce using rule 119 (N)

    N  go to state 337


State 329

  108 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 108 (postfix_expression)


State 330

  109 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA . RIGHT_CURLY_BRACE
  203 initializer_list: initializer_list COMMA . designation_opt initializer

    LEFT_SQUARE_BRACE  shift, and go to state 135
    RIGHT_CURLY_BRACE  shift, and go to state 338
    PERIOD             shift, and go to state 136

    $default  reduce using rule 205 (designation_opt)

    designation_opt  go to state 296
    designation      go to state 139
    designator_list  go to state 140
    designator       go to state 141


State 331

   55 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N . COLON M conditional_expression

    COLON  shift, and go to state 339


State 332

   22 iteration_statement: DO_KEYWORD M statement M WHILE_KEYWORD . LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    LEFT_ROUND_BRACE  shift, and go to state 340


State 333

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement . N M expression N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 119 (N)

    N  go to state 341


State 334

   24 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_statement expression_statement . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 342


State 335

   18 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE . M statement N
   19                    | IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE . M statement N ELSE_KEYWORD M statement

    $default  reduce using rule 118 (M)

    M  go to state 343


State 336

   20 selection_statement: SWITCH_KEYWORD LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 20 (selection_statement)


State 337

   21 iteration_statement: WHILE_KEYWORD M LEFT_ROUND_BRACE expression N . RIGHT_ROUND_BRACE M statement

    RIGHT_ROUND_BRACE  shift, and go to state 344


State 338

  109 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 109 (postfix_expression)


State 339

   55 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON . M conditional_expression

    $default  reduce using rule 118 (M)

    M  go to state 345


State 340

   22 iteration_statement: DO_KEYWORD M statement M WHILE_KEYWORD LEFT_ROUND_BRACE . expression N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    expression                 go to state 346
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 341

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement N . M expression N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 118 (M)

    M  go to state 347


State 342

   24 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_statement expression_statement RIGHT_ROUND_BRACE . statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 348
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 343

   18 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M . statement N
   19                    | IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M . statement N ELSE_KEYWORD M statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 349
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 344

   21 iteration_statement: WHILE_KEYWORD M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE . M statement

    $default  reduce using rule 118 (M)

    M  go to state 350


State 345

   55 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON M . conditional_expression

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    conditional_expression     go to state 351
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 165
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 346

   22 iteration_statement: DO_KEYWORD M statement M WHILE_KEYWORD LEFT_ROUND_BRACE expression . N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR
   39 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 228

    $default  reduce using rule 119 (N)

    N  go to state 352


State 347

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement N M . expression N RIGHT_ROUND_BRACE M statement

    SIZEOF_KEYWORD     shift, and go to state 73
    IDENTIFIER         shift, and go to state 74
    INTEGER_CONSTANT   shift, and go to state 75
    FLOATING_CONSTANT  shift, and go to state 76
    CHAR_CONSTANT      shift, and go to state 77
    STRING_LITERAL     shift, and go to state 78
    LEFT_ROUND_BRACE   shift, and go to state 79
    PLUS_PLUS          shift, and go to state 81
    MINUS_MINUS        shift, and go to state 82
    AMPERSAND          shift, and go to state 83
    MULTIPLICATION     shift, and go to state 84
    PLUS               shift, and go to state 85
    MINUS              shift, and go to state 86
    TILDE              shift, and go to state 87
    EXCLIMATION        shift, and go to state 88

    expression                 go to state 353
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 348

   24 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE declaration expression_statement expression_statement RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 24 (iteration_statement)


State 349

   18 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement . N
   19                    | IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement . N ELSE_KEYWORD M statement

    $default  reduce using rule 119 (N)

    N  go to state 354


State 350

   21 iteration_statement: WHILE_KEYWORD M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M . statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 355
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 351

   55 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON M conditional_expression .

    $default  reduce using rule 55 (conditional_expression)


State 352

   22 iteration_statement: DO_KEYWORD M statement M WHILE_KEYWORD LEFT_ROUND_BRACE expression N . RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR

    RIGHT_ROUND_BRACE  shift, and go to state 356


State 353

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement N M expression . N RIGHT_ROUND_BRACE M statement
   39 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 228

    $default  reduce using rule 119 (N)

    N  go to state 357


State 354

   18 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N .
   19                    | IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N . ELSE_KEYWORD M statement

    ELSE_KEYWORD  shift, and go to state 358

    ELSE_KEYWORD  [reduce using rule 18 (selection_statement)]
    $default      reduce using rule 18 (selection_statement)


State 355

   21 iteration_statement: WHILE_KEYWORD M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement .

    $default  reduce using rule 21 (iteration_statement)


State 356

   22 iteration_statement: DO_KEYWORD M statement M WHILE_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE . SEMICOLON_TERMINATOR

    SEMICOLON_TERMINATOR  shift, and go to state 359


State 357

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement N M expression N . RIGHT_ROUND_BRACE M statement

    RIGHT_ROUND_BRACE  shift, and go to state 360


State 358

   19 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE_KEYWORD . M statement

    $default  reduce using rule 118 (M)

    M  go to state 361


State 359

   22 iteration_statement: DO_KEYWORD M statement M WHILE_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMICOLON_TERMINATOR .

    $default  reduce using rule 22 (iteration_statement)


State 360

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement N M expression N RIGHT_ROUND_BRACE . M statement

    $default  reduce using rule 118 (M)

    M  go to state 362


State 361

   19 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE_KEYWORD M . statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 363
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 362

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement N M expression N RIGHT_ROUND_BRACE M . statement

    BREAK_KEYWORD         shift, and go to state 184
    CASE_KEYWORD          shift, and go to state 185
    CONTINUE_KEYWORD      shift, and go to state 186
    DEFAULT_KEYWORD       shift, and go to state 187
    DO_KEYWORD            shift, and go to state 188
    FOR_KEYWORD           shift, and go to state 189
    GOTO_KEYWORD          shift, and go to state 190
    IF_KEYWORD            shift, and go to state 191
    RETURN_KEYWORD        shift, and go to state 192
    SIZEOF_KEYWORD        shift, and go to state 73
    SWITCH_KEYWORD        shift, and go to state 193
    WHILE_KEYWORD         shift, and go to state 194
    IDENTIFIER            shift, and go to state 195
    INTEGER_CONSTANT      shift, and go to state 75
    FLOATING_CONSTANT     shift, and go to state 76
    CHAR_CONSTANT         shift, and go to state 77
    STRING_LITERAL        shift, and go to state 78
    LEFT_ROUND_BRACE      shift, and go to state 79
    LEFT_CURLY_BRACE      shift, and go to state 108
    PLUS_PLUS             shift, and go to state 81
    MINUS_MINUS           shift, and go to state 82
    AMPERSAND             shift, and go to state 83
    MULTIPLICATION        shift, and go to state 84
    PLUS                  shift, and go to state 85
    MINUS                 shift, and go to state 86
    TILDE                 shift, and go to state 87
    EXCLIMATION           shift, and go to state 88
    SEMICOLON_TERMINATOR  shift, and go to state 197

    statement                  go to state 364
    labeled_statement          go to state 199
    compound_statement         go to state 200
    expression_statement       go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    expression                 go to state 207
    assignment_expression      go to state 130
    conditional_expression     go to state 90
    logical_OR_expression      go to state 91
    logical_AND_expression     go to state 92
    inclusive_OR_expression    go to state 93
    exclusive_OR_expression    go to state 94
    AND_expression             go to state 95
    equality_expression        go to state 96
    relational_expression      go to state 97
    shift_expression           go to state 98
    additive_expression        go to state 99
    multiplicative_expression  go to state 100
    cast_expression            go to state 101
    unary_operator             go to state 102
    unary_expression           go to state 103
    postfix_expression         go to state 104
    primary_expression         go to state 105
    constant                   go to state 106


State 363

   19 selection_statement: IF_KEYWORD LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE_KEYWORD M statement .

    $default  reduce using rule 19 (selection_statement)


State 364

   23 iteration_statement: FOR_KEYWORD LEFT_ROUND_BRACE expression_statement M expression_statement N M expression N RIGHT_ROUND_BRACE M statement .

    $default  reduce using rule 23 (iteration_statement)
