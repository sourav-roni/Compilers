2
THE PARSER RULES ARE
********************************************************************************************************************
********************************************************************************************************************
type_specifier ->VOID_KEYWORD  
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
parameter_declaration ->declaration_specifiers declarator 
parameter_list ->parameter_declaration 
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
parameter_declaration ->declaration_specifiers declarator 
parameter_list ->parameter_list COMMA parameter_declaration 
parameter_type_list ->parameter_list 
direct_declarator ->direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list ->init_declarator 
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
external_declaration ->function_definition
translation_unit -> external_declaration
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
direct_declarator -> direct_declarator LEFT_ROUND_BRACE RIGHT_ROUND_BRACE
 declarator -> direct_declarator
init_declarator->declarator
init_declarator_list ->init_declarator 
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
external_declaration ->function_definition
translation_unit -> translation_unit external_declaration
type_specifier ->VOID_KEYWORD  
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
parameter_declaration ->declaration_specifiers declarator 
parameter_list ->parameter_declaration 
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
parameter_declaration ->declaration_specifiers declarator 
parameter_list ->parameter_list COMMA parameter_declaration 
parameter_type_list ->parameter_list 
direct_declarator ->direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
declarator -> direct_declarator
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list ->init_declarator 
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
block_item ->declaration
block_item_list ->block_item 
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
a
0xd08120
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
b
0xd0e380
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
The additive has the name ..a
The additive has the name ..b
additive_expression-> additive_expression PLUS multiplicative_expression 
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
printi
0xd080e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
a
0xd08120
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
b
0xd0e380
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> additive_expression MINUS multiplicative_expression 
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
printi
0xd080e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
a
0xd08120
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
b
0xd0e380
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> multiplicative_expression MULTIPLICATION cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
printi
0xd080e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
a
0xd08120
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
b
0xd0e380
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression ->relational_expression GREATER_THAN shift_expression
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
a
0xd08120
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item 
d
0xd0e640
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
b
0xd0e380
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
statement ->compound_statement
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
b
0xd0e380
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item 
d
0xd0e640
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
a
0xd08120
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
statement ->compound_statement
selection_statement ->IF_KEYWORD LEFT_ROUND_BRACE expression N  RIGHT_ROUND_BRACE M  statement N  ELSE_KEYWORD M statement  
statement ->selection_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
printi
0xd080e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
c
0xd0e600
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
printi
0xd080e0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
d
0xd0e640
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd0e680
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
jump_statement -> RETURN_KEYWORD SEMICOLON_TERMINATORstatement ->jump_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
function_definition->declaration_specifiers declarator F compound_statement
external_declaration ->function_definition
translation_unit -> translation_unit external_declaration
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
direct_declarator -> direct_declarator LEFT_ROUND_BRACE RIGHT_ROUND_BRACE
 declarator -> direct_declarator
type_specifier ->INT_KEYWORD 
 declaration_specifiers -> type_specifier
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list ->init_declarator 
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
direct_declarator ->IDENTIFIER 
declarator -> direct_declarator
init_declarator->declarator
init_declarator_list->init_declarator_list COMMA init_declarator  
declaration -> declaration_specifiers init_declarator_list SEMICOLON_TERMINATOR
block_item ->declaration
block_item_list ->block_item 
dummy
0xd10c70
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
a
0xd10bb0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
readi
0xd082c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_operator-> AMPERSAND
error
0xd10c30
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
unary_expression-> unary_operator cast_expression 
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
dummy
0xd10c70
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
prints
0xd07f20
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
primary_expression-> STRING_LITERAL 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
b
0xd10bf0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
assignment_operator -> EQUAL
readi
0xd082c0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_operator-> AMPERSAND
error
0xd10c30
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
unary_expression-> unary_operator cast_expression 
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
assignment_expression->unary_expression assignment_operator assignment_expression  
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
test
0xd0e400
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
a
0xd10bb0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> assignment_expression
b
0xd10bf0
primary_expression-> IDENTIFIER 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
argument_expression_list-> argument_expression_list COMMA assignment_expression
postfix_expression-> postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
expression_statement -> expression  SEMICOLON_TERMINATOR  
statement ->expression_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
constant-> INTEGER_CONSTANT 
primary_expression-> constant 
postfix_expression-> primary_expression 
unary_expression-> postfix_expression
cast_expression-> unary_expression
multiplicative_expression-> cast_expression
additive_expression-> multiplicative_expression
shift_expression-> additive_expression
relational_expression-> shift_expression 
equality_expression->relational_expression
AND_expression ->equality_expression
exclusive_OR_expression ->AND_expression
inclusive_OR_expression ->exclusive_OR_expression 
logical_AND_expression ->inclusive_OR_expression  
logical_OR_expression->logical_AND_expression 
conditional_expression ->logical_OR_expression 
assignment_expression ->conditional_expression 
expression ->assignment_expression 
jump_statement ->RETURN_KEYWORD expression SEMICOLON_TERMINATOR 
statement ->jump_statement 
block_item ->statement
block_item_list ->block_item_list M block_item  
compound_statement->LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE 
function_definition->declaration_specifiers declarator F compound_statement
external_declaration ->function_definition
translation_unit -> translation_unit external_declaration
THIS IS THE END OF PARSING
********************************************************************************************************************
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
GLOBAL SYMBOL TABLE : 
----------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|    prints| function |         0|         0|       nil|prints SYMBOL TABLE

|    printi| function |         0|         0|       nil|printi SYMBOL TABLE

|     readi| function |         0|         0|       nil|readi SYMBOL TABLE

|      test| function |         0|         0|       nil|test SYMBOL TABLE

|      main| function |         0|         0|       nil|main SYMBOL TABLE

prints SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         s|  pointer (char )|         4|         0|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

printi SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         i|      int |         4|         0|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

readi SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|        ep|  pointer (int )|         4|         0|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

test SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         a|      int |         4|         0|       nil|       nil

|         b|      int |         4|         4|       nil|       nil

|    RETURN|     void |         0|         8|       nil|       nil

|         c|      int |         4|         8|       nil|       nil

|         d|      int |         4|        12|       nil|       nil

|     dummy|      int |         4|        16|       nil|       nil

|      t000|      int |         4|        20|       nil|       nil

|      t001|      int |         4|        24|       nil|       nil

|      t002|      int |         4|        28|       nil|       nil

|      t003|      int |         4|        32|       nil|       nil

|      t004|      int |         4|        36|       nil|       nil

|      t005|      int |         4|        40|       nil|       nil

|      t006|      int |         4|        44|       nil|       nil

|      t007|      int |         4|        48|       nil|       nil

|      t008|      int |         4|        52|       nil|       nil

|      t009|      int |         4|        56|       nil|       nil

|      t010|      int |         4|        60|       nil|       nil

|      t011|      int |         4|        64|       nil|       nil

|      t012|      int |         4|        68|       nil|       nil

|      t013|      int |         4|        72|       nil|       nil

|      t014|      int |         4|        76|       nil|       nil

|      t015|      int |         4|        80|       nil|       nil

|      t016|      int |         4|        84|       nil|       nil

|      t017|      int |         4|        88|       nil|       nil

main SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|    RETURN|      int |         4|         0|       nil|       nil

|         a|      int |         4|         4|       nil|       nil

|         b|      int |         4|         8|       nil|       nil

|     error|      int |         4|        12|       nil|       nil

|     dummy|      int |         4|        16|       nil|       nil

|      t018|      int |         4|        20|       nil|       nil

|        t0|  pointer (int )|         8|        24|       nil|       nil

|      t019|      int |         4|        32|       nil|       nil

|      t020|      int |         4|        36|       nil|       nil

|        t1|  pointer (int )|         8|        40|       nil|       nil

|      t021|      int |         4|        48|       nil|       nil

|      t022|     void |         0|        52|       nil|       nil

|      t023|      int |         4|        52|       nil|       nil

THE THREE ADDRESS CODES ARE AS FOLLOWS : 
------------------------------------------------------------------------------------------------------------------
*************************************
0 -> test  - FUNCTION 
*************************************
1 -> t000 = a + b
2 -> c = t000
3 -> param .LFE0
4 -> t001 = call prints, 1
5 -> dummy = t001
6 -> param c
7 -> t002 = call printi, 1
8 -> dummy = t002
9 -> param .LFE1
10 -> t003 = call prints, 1
11 -> dummy = t003
12 -> t004 = a - b
13 -> c = t004
14 -> param .LFE2
15 -> t005 = call prints, 1
16 -> dummy = t005
17 -> param c
18 -> t006 = call printi, 1
19 -> dummy = t006
20 -> param .LFE3
21 -> t007 = call prints, 1
22 -> dummy = t007
23 -> t008 = a * b
24 -> c = t008
25 -> param .LFE4
26 -> t009 = call prints, 1
27 -> dummy = t009
28 -> param c
29 -> t010 = call printi, 1
30 -> dummy = t010
31 -> param .LFE5
32 -> t011 = call prints, 1
33 -> dummy = t011
34 -> if a > b goto 37
35 -> goto 40
36 -> goto 42
37 -> c = a
38 -> d = b
39 -> goto 42
40 -> c = b
41 -> d = a
42 -> param .LFE6
43 -> t012 = call prints, 1
44 -> dummy = t012
45 -> param c
46 -> t013 = call printi, 1
47 -> dummy = t013
48 -> param .LFE7
49 -> t014 = call prints, 1
50 -> dummy = t014
51 -> param .LFE8
52 -> t015 = call prints, 1
53 -> dummy = t015
54 -> param d
55 -> t016 = call printi, 1
56 -> dummy = t016
57 -> param .LFE9
58 -> t017 = call prints, 1
59 -> dummy = t017
60 -> return
*************************************
61 -> main  - FUNCTION 
*************************************
62 -> param .LFE10
63 -> t018 = call prints, 1
64 -> dummy = t018
65 -> t0 = & error
66 -> param t0
67 -> t019 = call readi, 1
68 -> a = t019
69 -> param .LFE11
70 -> t020 = call prints, 1
71 -> dummy = t020
72 -> t1 = & error
73 -> param t1
74 -> t021 = call readi, 1
75 -> b = t021
76 -> param a
77 -> param b
78 -> call test, 2
79 -> t023 = 0
80 -> return t023
updated symbol table is
-----------------------------------------------------------------------------------------------------------------
GLOBAL SYMBOL TABLE : 
----------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|    prints| function |         0|         0|       nil|prints SYMBOL TABLE

|    printi| function |         0|         0|       nil|printi SYMBOL TABLE

|     readi| function |         0|         0|       nil|readi SYMBOL TABLE

|      test| function |         0|         0|       nil|test SYMBOL TABLE

|      main| function |         0|         0|       nil|main SYMBOL TABLE

prints SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         s|  pointer (char )|         8|        -8|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

printi SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         i|      int |         4|        -4|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

readi SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|        ep|  pointer (int )|         8|        -8|       nil|       nil

|    RETURN|      int |         4|         4|       nil|       nil

test SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|         a|      int |         4|        -4|       nil|       nil

|         b|      int |         4|        -8|       nil|       nil

|    RETURN|     void |         0|         8|       nil|       nil

|         c|      int |         4|       -12|       nil|       nil

|         d|      int |         4|       -16|       nil|       nil

|     dummy|      int |         4|       -20|       nil|       nil

|      t000|      int |         4|       -24|       nil|       nil

|      t001|      int |         4|       -28|       nil|       nil

|      t002|      int |         4|       -32|       nil|       nil

|      t003|      int |         4|       -36|       nil|       nil

|      t004|      int |         4|       -40|       nil|       nil

|      t005|      int |         4|       -44|       nil|       nil

|      t006|      int |         4|       -48|       nil|       nil

|      t007|      int |         4|       -52|       nil|       nil

|      t008|      int |         4|       -56|       nil|       nil

|      t009|      int |         4|       -60|       nil|       nil

|      t010|      int |         4|       -64|       nil|       nil

|      t011|      int |         4|       -68|       nil|       nil

|      t012|      int |         4|       -72|       nil|       nil

|      t013|      int |         4|       -76|       nil|       nil

|      t014|      int |         4|       -80|       nil|       nil

|      t015|      int |         4|       -84|       nil|       nil

|      t016|      int |         4|       -88|       nil|       nil

|      t017|      int |         4|       -92|       nil|       nil

main SYMBOL TABLE :  
---------------------
|      NAME|      TYPE|      SIZE|    OFFSET|     VALUE|NESTED TABLE
|      ----|      ----|      ----|    ------|  --------|------------
|    RETURN|      int |         4|         0|       nil|       nil

|         a|      int |         4|        -4|       nil|       nil

|         b|      int |         4|        -8|       nil|       nil

|     error|      int |         4|       -12|       nil|       nil

|     dummy|      int |         4|       -16|       nil|       nil

|      t018|      int |         4|       -20|       nil|       nil

|        t0|  pointer (int )|         8|       -28|       nil|       nil

|      t019|      int |         4|       -32|       nil|       nil

|      t020|      int |         4|       -36|       nil|       nil

|        t1|  pointer (int )|         8|       -44|       nil|       nil

|      t021|      int |         4|       -48|       nil|       nil

|      t022|     void |         0|       -48|       nil|       nil

|      t023|      int |         4|       -52|       nil|       nil

